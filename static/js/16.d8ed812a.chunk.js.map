{"version":3,"file":"static/js/16.d8ed812a.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register/Register.js","utils/PasswordToggle.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Form, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { register } from 'redux/auth/authOperations';\nimport PasswordToggle from '../../utils/PasswordToggle';\n\nexport const RegisterForm = () => {\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} className=\"mx-auto\">\n      <Form.Group controlId=\"formBasicEmail\" className=\" mb-4\">\n        <Form.Label>{t('name')}:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          placeholder={t('placeholder_name')}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"formBasicEmail\" className=\"mb-4\">\n        <Form.Label>{t('email')}:</Form.Label>\n        <Form.Control\n          type=\"email\"\n          name=\"email\"\n          placeholder={t('placeholder_email')}\n        />\n        <Form.Text className=\"text-muted\">{t('form_text')}</Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicPassword\" className=\"mb-4\">\n        <Form.Label>{t('password')}:</Form.Label>\n        <div className=\"input-group\">\n          <Form.Control\n            type={showPassword ? 'text' : 'password'}\n            name=\"password\"\n            value={password}\n            placeholder={t('placeholder_password')}\n            onChange={e => setPassword(e.target.value)}\n          />\n          <PasswordToggle\n            showPassword={showPassword}\n            togglePassword={handleTogglePassword}\n          />\n        </div>\n      </Form.Group>\n      <Button type=\"submit\" className=\"m-2\" variant=\"primary\">\n        {t('register')}\n      </Button>\n    </Form>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useTranslation } from 'react-i18next';\n\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  const { t } = useTranslation();\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>{t('register')}</title>\n      </Helmet>\n      <div className=\"d-flex flex-column  mt-5 pt-5\">\n        <h2 className=\"text-uppercase mb-2 mx-auto\">{t('register')}</h2>\n        <RegisterForm />\n      </div>\n    </HelmetProvider>\n  );\n}\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { PiEyeClosedBold, PiEyeBold } from 'react-icons/pi';\n\nfunction PasswordToggle({ showPassword, togglePassword }) {\n  return (\n    <Button\n      className=\"input-group-append border-light-subtle\"\n      type=\"button\"\n      variant=\"outline-secondary\"\n      onClick={togglePassword}\n    >\n      {showPassword ? <PiEyeClosedBold /> : <PiEyeBold />}\n    </Button>\n  );\n}\n\nexport default PasswordToggle;\n"],"names":["RegisterForm","_useState","useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","showPassword","setShowPassword","t","useTranslation","dispatch","useDispatch","_jsxs","Form","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","reset","className","children","controlId","_jsx","type","placeholder","onChange","target","PasswordToggle","togglePassword","Button","variant","Register","HelmetProvider","Helmet","_ref","onClick","PiEyeClosedBold","PiEyeBold"],"sourceRoot":""}