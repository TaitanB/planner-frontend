{"version":3,"file":"static/js/804.296d2fca.chunk.js","mappings":"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","sources":["helpers/ScrollToTopButton.jsx","redux/todos/selectors.js","helpers/getDate.js","components/TodosForm/UpdateTodosForm.jsx","components/TodosItem/TodosItem.jsx","components/TodosList/TodosList.jsx","utils/MyDatePicker.js","helpers/getPlannedDate.js","components/PeriodsDate/PeriodsDate.jsx","components/TodosForm/AddTodosForm.jsx","components/TodosFilter/TodosFilter.jsx","components/TodosStatistics/TodosStatistics.jsx","components/GetPagination/GetPagination.jsx","pages/Todos/Todos.js"],"sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { FaArrowUp } from 'react-icons/fa';\n\nconst ScrollToTopButton = ({ isAccordionOpen }) => {\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <Button\n      variant=\"outline-primary\"\n      className={`position-absolute bottom-0 end-0 scroll-to-top-button me-3 ${\n        isAccordionOpen ? 'visible' : 'invisible'\n      }`}\n      onClick={scrollToTop}\n    >\n      <FaArrowUp className=\"scroll-to-top-icon\" />\n    </Button>\n  );\n};\n\nexport default ScrollToTopButton;\n","export const getTotalPages = state => state.todos.totalPages;\n\nexport const getPage = state => state.todos.page;\n\nexport const getTotalTodos = state => state.todos.totalTodos;\n\nexport const Filtered = state => state.todos.filter;\n\nexport const getFilteredTodos = state => {\n  if (!state.todos.filter) {\n    return state.todos.items;\n  }\n  const result = state.todos.items.filter(({ title, description }) => {\n    return (\n      title.toLowerCase().includes(state.todos.filter.toLowerCase()) ||\n      description.toLowerCase().includes(state.todos.filter.toLowerCase())\n    );\n  });\n  return result;\n};\n\nexport const selectLoading = state => state.todos.loading;\n","export const getDate = date => {\n  if (date) {\n    const [year, month, day] = date.slice(0, 10).split('-');\n\n    return `${day}.${month}.${year}`;\n  }\n};\n","import { Button, Form } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nexport default function UpdateTodosForm({\n  handleSubmit,\n  descriptionUpdate,\n  handleChange,\n  description,\n  reset,\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          type=\"text\"\n          name=\"description\"\n          value={descriptionUpdate}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <Button\n        className=\"me-3\"\n        variant=\"primary\"\n        type=\"submit\"\n        disabled={descriptionUpdate === description}\n      >\n        {t('update_todo')}\n      </Button>\n      <Button variant=\"secondary\" onClick={() => reset()}>\n        {t('cancel')}\n      </Button>\n    </Form>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\nimport { MdOutlineDeleteForever, MdBorderColor } from 'react-icons/md';\nimport { BsDatabaseCheck } from 'react-icons/bs';\n\n// import propTypes from 'prop-types';\n\nimport {\n  fetchDeleteTodo,\n  fetchUpdateTodo,\n  fetchCompletedToggle,\n} from '../../redux/todos/operations';\nimport { getDate } from '../../helpers/getDate';\n\nimport { Accordion, Button, Form } from 'react-bootstrap';\nimport UpdateTodosForm from 'components/TodosForm/UpdateTodosForm';\n\nconst TodosItem = ({\n  _id,\n  title,\n  description,\n  createdAt,\n  updatedAt,\n  plannedDate,\n  completedDate,\n  overdueDate,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [descriptionUpdate, setDescriptionUpdate] = useState(description);\n\n  const selectedLanguage = localStorage.getItem('selectedLanguage');\n\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation();\n\n  const isCompleted = completedDate !== null;\n  const isOverdue = overdueDate !== null;\n\n  useEffect(() => {\n    const tooltips = Array.from(\n      document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')\n    );\n    tooltips.forEach(tooltip => {\n      new window.bootstrap.Tooltip(tooltip);\n    });\n  }, [selectedLanguage]);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'description':\n        setDescriptionUpdate(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(fetchUpdateTodo({ _id: _id, description: descriptionUpdate }));\n\n    toast.success(`${t('todo_update')}`);\n\n    setIsEditing(false);\n  };\n\n  const deleteTodo = _id => {\n    dispatch(fetchDeleteTodo(_id));\n\n    toast.success(`${t('todo_deleted')}`);\n  };\n\n  const completedToggle = _id => {\n    dispatch(fetchCompletedToggle(_id));\n\n    !isCompleted\n      ? toast.success(`${t('todo_completed')}`)\n      : toast.success(`${t('todo_not_completed')}`);\n  };\n\n  const handleToggle = (e, _id) => {\n    e.target.blur();\n\n    completedToggle(_id);\n  };\n\n  const reset = () => {\n    setIsEditing(false);\n    setDescriptionUpdate(description);\n  };\n\n  return (\n    <Accordion.Item eventKey={_id}>\n      <div className=\"d-flex gap-3 align-items-center px-3\">\n        {!isOverdue && (\n          <Form.Check\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            data-bs-title={`${t('is_completed')}`}\n            aria-label=\"option 1\"\n            id={`toggle-check-${_id}`}\n            type=\"checkbox\"\n            variant=\"outline-primary\"\n            checked={isCompleted}\n            disabled={isEditing === true}\n            value=\"1\"\n            onChange={e => handleToggle(e, _id)}\n          />\n        )}\n        {isOverdue && (\n          <Form.Check\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            data-bs-title={`${t('is_overdue')}`}\n            isInvalid\n            defaultChecked\n            type=\"radio\"\n            id={`toggle-check-${_id}`}\n          />\n        )}\n        <Accordion.Header className=\"w-100\">\n          <h5\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            data-bs-title={title}\n            className=\"w-100 mb-0 text-truncate custom-accordion-header\"\n          >\n            {title}\n          </h5>\n        </Accordion.Header>\n        {isCompleted || isOverdue ? (\n          <Button\n            key={`archive-${_id}`}\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            data-bs-title={`${t('add_to_archive')}`}\n            className=\"ms-auto btn btn-success\"\n            type=\"button\"\n            // onClick={() => toArchiveTodo(_id)}\n          >\n            <BsDatabaseCheck />\n          </Button>\n        ) : (\n          <Button\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            data-bs-title={`${t('delete')}`}\n            disabled={isEditing}\n            className=\"ms-auto btn btn-danger\"\n            type=\"button\"\n            onClick={() => deleteTodo(_id)}\n          >\n            <MdOutlineDeleteForever />\n          </Button>\n        )}\n      </div>\n      <Accordion.Body className=\"p-3\" onExited={() => setIsEditing(false)}>\n        {!isEditing ? (\n          <>\n            <p className=\"mb-3\">{description}</p>\n\n            <div className=\"d-flex flex-wrap gap-3 align-items-center\">\n              <div>\n                {t('created')}: <b>{getDate(createdAt)}</b>\n              </div>\n              <div>\n                {t('updated')}: <b> {getDate(updatedAt)}</b>\n              </div>\n              <div>\n                {t('planned_date')}: <b> {getDate(plannedDate)}</b>\n              </div>\n              {overdueDate === null && (\n                <div className={isCompleted ? 'text-success' : ''}>\n                  {t('completed')}:\n                  <b> {isCompleted ? getDate(completedDate) : '??.??.????'}</b>\n                </div>\n              )}\n              {isOverdue && (\n                <div className=\"text-danger\">\n                  {t('is_overdue')}: <b>{getDate(overdueDate)}</b>\n                </div>\n              )}\n              <Button\n                data-bs-title={`${t('edit')}`}\n                disabled={isCompleted || isOverdue}\n                className=\"ms-auto btn btn-primary\"\n                type=\"button\"\n                onClick={() => setIsEditing(true)}\n              >\n                <MdBorderColor />\n              </Button>\n            </div>\n          </>\n        ) : (\n          <UpdateTodosForm\n            handleSubmit={handleSubmit}\n            descriptionUpdate={descriptionUpdate}\n            handleChange={handleChange}\n            description={description}\n            reset={reset}\n          />\n        )}\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n};\n\n// TodosItem.propTypes = {\n//   _id: propTypes.string.isRequired,\n//   title: propTypes.string.isRequired,\n//   description: propTypes.string.isRequired,\n//   createdAt: propTypes.string.isRequired,\n//   updatedAt: propTypes.string.isRequired,\n//   completedDate: propTypes.string,\n// };\n\nexport default TodosItem;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Accordion, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport ScrollToTopButton from '../../helpers/ScrollToTopButton';\nimport { getFilteredTodos } from '../../redux/todos/selectors';\nimport TodosItem from '../TodosItem/TodosItem';\n\nconst TodosList = () => {\n  const [activeAccordionKey, setActiveAccordionKey] = useState([]);\n  const [isAccordionOpen, setIsAccordionOpen] = useState(false);\n\n  const filteredTodos = useSelector(getFilteredTodos);\n\n  const { t } = useTranslation();\n\n  useEffect(\n    isAccordionOpen => {\n      !isAccordionOpen && setIsAccordionOpen(false);\n      setActiveAccordionKey([]);\n    },\n    [filteredTodos]\n  );\n\n  const handleToggleAccordion = () => {\n    if (!isAccordionOpen && activeAccordionKey.length > 0) {\n      filteredTodos.forEach(({ _id }) => {\n        setActiveAccordionKey(prevStates => {\n          if (prevStates.includes(_id)) {\n            return prevStates;\n          } else {\n            return [...prevStates, _id];\n          }\n        });\n      });\n    } else if (!isAccordionOpen) {\n      filteredTodos.forEach(({ _id }) => {\n        setActiveAccordionKey(prevStates => {\n          return [...prevStates, _id];\n        });\n      });\n    } else {\n      setActiveAccordionKey([]);\n    }\n\n    setIsAccordionOpen(prevState => !prevState);\n  };\n\n  const handleAccordionSelect = key => {\n    setActiveAccordionKey(prevStates => {\n      if (prevStates.includes(key)) {\n        return prevStates.filter(id => id !== key);\n      } else {\n        return key;\n      }\n    });\n\n    if (filteredTodos.length - 1 === activeAccordionKey.length) {\n      setIsAccordionOpen(prevState => !prevState);\n    }\n  };\n\n  return (\n    <div className=\"mb-3 pb-5 position-relative\">\n      <Button\n        variant=\"outline-primary\"\n        onClick={handleToggleAccordion}\n        className=\"position-absolute bottom-0 start-0\"\n      >\n        {isAccordionOpen\n          ? `${t('is_accordion_close')}`\n          : `${t('is_accordion_open')}`}\n      </Button>\n      <ScrollToTopButton isAccordionOpen={isAccordionOpen} />\n      {filteredTodos.length !== 0 ? (\n        <Accordion\n          alwaysOpen\n          activeKey={activeAccordionKey}\n          onSelect={handleAccordionSelect}\n        >\n          {filteredTodos.map(\n            ({\n              _id,\n              title,\n              description,\n              createdAt,\n              updatedAt,\n              plannedDate,\n              completedDate,\n              overdueDate,\n            }) => {\n              return (\n                <TodosItem\n                  key={_id}\n                  _id={_id}\n                  title={title}\n                  description={description}\n                  createdAt={createdAt}\n                  updatedAt={updatedAt}\n                  plannedDate={plannedDate}\n                  completedDate={completedDate}\n                  overdueDate={overdueDate}\n                />\n              );\n            }\n          )}\n        </Accordion>\n      ) : (\n        <div className=\"text-center py-5 border rounded bs-accordion-bg\">\n          <p>{t('no_todos_text')}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TodosList;\n","import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { MdCalendarMonth } from 'react-icons/md';\n\nfunction MyDatePicker({ selectedPeriod, setPlannedDate }) {\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // console.log(selectedPeriod, selectedDate);\n\n  useEffect(() => {\n    selectedPeriod !== 'date' && setSelectedDate(null);\n  }, [selectedPeriod]);\n\n  return (\n    <div\n      className={`d-flex gap-1 align-items-center ${\n        selectedPeriod === 'date' && 'text-primary'\n      }`}\n    >\n      <MdCalendarMonth />\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          setSelectedDate(date);\n          setPlannedDate(date);\n        }}\n        className=\"w-100 text-center\"\n      />\n    </div>\n  );\n}\n\nexport default MyDatePicker;\n","export const getPlannedDate = ({ text, plannedDate }) => {\n  const currentDate = new Date();\n  let date;\n\n  // console.log(plannedDate);\n\n  switch (text) {\n    case 'week':\n      date = new Date(currentDate.getTime() + 7 * 24 * 60 * 60 * 1000);\n      break;\n    case 'month':\n      date = new Date(\n        currentDate.getFullYear(),\n        currentDate.getMonth() + 1,\n        currentDate.getDate()\n      );\n      break;\n    case '3_months':\n      date = new Date(\n        currentDate.getFullYear(),\n        currentDate.getMonth() + 3,\n        currentDate.getDate()\n      );\n      break;\n    case 'half_year':\n      date = new Date(\n        currentDate.getFullYear(),\n        currentDate.getMonth() + 6,\n        currentDate.getDate()\n      );\n      break;\n    case 'year':\n      date = new Date(\n        currentDate.getFullYear() + 1,\n        currentDate.getMonth(),\n        currentDate.getDate()\n      );\n      break;\n    case '3_years':\n      date = new Date(\n        currentDate.getFullYear() + 3,\n        currentDate.getMonth(),\n        currentDate.getDate()\n      );\n      break;\n    case '5_years':\n      date = new Date(\n        currentDate.getFullYear() + 5,\n        currentDate.getMonth(),\n        currentDate.getDate()\n      );\n      break;\n\n    case 'date':\n      date = plannedDate;\n      break;\n\n    default:\n      break;\n  }\n\n  console.log(date);\n\n  return date;\n};\n","import { Form } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport MyDatePicker from '../../utils/MyDatePicker';\nimport { Periods } from '../../constants/constants';\nimport { getPlannedDate } from '../../helpers/getPlannedDate';\n\nexport default function PeriodsDate({\n  plannedDate,\n  setPlannedDate,\n  selectedPeriod,\n  setSelectedPeriod,\n}) {\n  const { t } = useTranslation();\n\n  // console.log(plannedDate);\n\n  return (\n    <div className=\"d-flex flex-wrap gap-3 align-items-center\">\n      {Periods.map(text => (\n        <Form.Check\n          style={{ width: '122px' }}\n          key={`${t(text)}`}\n          checked={selectedPeriod === text}\n          label={`${t(text)}`}\n          name=\"plannedDate\"\n          type=\"radio\"\n          id={`inline-radio-${text}`}\n          onChange={() => {\n            setSelectedPeriod(text);\n            setPlannedDate(getPlannedDate({ text, plannedDate }));\n          }}\n        />\n      ))}\n      <Form.Label>\n        <Form.Check\n          key=\"date\"\n          checked={selectedPeriod === 'date'}\n          inline\n          name=\"plannedDate\"\n          type=\"radio\"\n          className=\"btn-check\"\n          id=\"inline-radio-date\"\n          onChange={() => {\n            const text = 'date';\n            setSelectedPeriod(text);\n            setPlannedDate(getPlannedDate({ text, plannedDate }));\n          }}\n        />\n        <MyDatePicker\n          selectedPeriod={selectedPeriod}\n          setPlannedDate={setPlannedDate}\n        />\n      </Form.Label>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Accordion, Button, Form } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\n\nimport { fetchAddTodo } from '../../redux/todos/operations';\nimport PeriodsDate from '../PeriodsDate/PeriodsDate';\n\nexport default function AddTodosForm() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [plannedDate, setPlannedDate] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState('');\n\n  // console.log(selectedPeriod, plannedDate);\n\n  const [activeAccordionKey, setActiveAccordionKey] = useState(null);\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        break;\n\n      case 'description':\n        setDescription(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(plannedDate);\n    dispatch(fetchAddTodo({ title, description, plannedDate }));\n    toast.success(`${t('todo_added')}`);\n    reset();\n  };\n\n  const reset = () => {\n    setTitle('');\n    setDescription('');\n    setPlannedDate('');\n    setSelectedPeriod('');\n  };\n\n  const handleCancelClick = () => {\n    reset();\n    if (activeAccordionKey === '0') {\n      setActiveAccordionKey(null);\n    }\n  };\n\n  const handleAccordionSelect = key => {\n    setActiveAccordionKey(key);\n  };\n\n  return (\n    <Accordion activeKey={activeAccordionKey} onSelect={handleAccordionSelect}>\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header>\n          <h3 className=\"mb-0 ms-auto \">{t('form_add_todo_title')}</h3>\n        </Accordion.Header>\n        <Accordion.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label visuallyHidden>{t('title_todo')}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"title\"\n                required\n                value={title}\n                onChange={handleChange}\n                placeholder={t('placeholder_title')}\n              />\n            </Form.Group>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label visuallyHidden>{t('description')}</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={6}\n                type=\"text\"\n                name=\"description\"\n                value={description}\n                onChange={handleChange}\n                placeholder={t('placeholder_description')}\n              />\n            </Form.Group>\n            <div key=\"inline-radio\" className=\"d-flex flex-wrap mb-3\">\n              <h5 className=\"d-inline-block me-3 mb-3\">\n                {`${t('planned_date')}`}:\n              </h5>\n              <PeriodsDate\n                plannedDate={plannedDate}\n                setPlannedDate={setPlannedDate}\n                selectedPeriod={selectedPeriod}\n                setSelectedPeriod={setSelectedPeriod}\n              />\n            </div>\n            <Button\n              className=\"me-3\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={!title || !description || !selectedPeriod}\n            >\n              {t('add_todo')}\n            </Button>\n            <Button variant=\"secondary\" onClick={handleCancelClick}>\n              {t('cancel')}\n            </Button>\n          </Form>\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, CloseButton, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { getFilter, clearFilter } from '../../redux/todos/todosSlice';\n// import { Filtered } from '../../redux/todos/selectors';\n\nimport propTypes from 'prop-types';\n\nconst TodosFilter = () => {\n  // const query = useSelector(Filtered);\n  const [searchValue, setSearchValue] = useState('');\n  const { t } = useTranslation();\n  // console.log(query);\n  // console.log(filter);\n  const dispatch = useDispatch();\n\n  // const handleChangeFilter = event => {\n  //   const { value } = event.currentTarget;\n  //   return value;\n  // dispatch(getFilter(value));\n  // };\n\n  const handleSearch = () => {\n    console.log(searchValue);\n    dispatch(getFilter(searchValue));\n  };\n\n  const handleClearFilter = event => {\n    event.target.blur();\n    dispatch(clearFilter());\n    setSearchValue('');\n  };\n\n  return (\n    <Form className=\"d-flex mb-3\">\n      <Form.Label className=\"mb-0 d-flex align-items-center\">\n        <Form.Control\n          type=\"text\"\n          name={searchValue}\n          value={searchValue}\n          onChange={event => setSearchValue(event.target.value)}\n          placeholder={t('placeholder_search')}\n          className=\"me-2\"\n          aria-label=\"Search\"\n        />\n        <Button onClick={handleSearch} variant=\"outline-primary me-2\">\n          {t('placeholder_search')}\n        </Button>\n        <CloseButton onClick={handleClearFilter} />\n      </Form.Label>\n    </Form>\n  );\n};\n\nTodosFilter.propTypes = {\n  filter: propTypes.string.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n// import { Accordion } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { getTotalTodos, getTotalPages } from '../../redux/todos/selectors';\n\nconst TodosStatistics = () => {\n  const totalTodos = useSelector(getTotalTodos);\n  const totalPages = useSelector(getTotalPages);\n\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"d-flex flex-wrap gap-3 align-items-center mb-3 ms-auto\">\n      <div>\n        {t('all_todos')}: <b>{totalTodos}</b>\n      </div>\n      <div>\n        {t('page')}: <b>{totalPages}</b>\n      </div>\n      <div>\n        {t('completed')}: <b>0</b>\n      </div>\n      <div>\n        {t('is_overdue')}: <b>0</b>\n      </div>\n      <div>\n        {t('archive')}: <b>0</b>\n      </div>\n    </div>\n  );\n};\n\nexport default TodosStatistics;\n","import React, { useState, useEffect } from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\n\nexport default function GetPagination({ page, totalPages, handlePageChange }) {\n  const [maxVisiblePages, setMaxVisiblePages] = useState(5);\n\n  const handleWindowSizeChange = () => {\n    if (window.innerWidth < 425) {\n      setMaxVisiblePages(1);\n    } else if (window.innerWidth < 576) {\n      setMaxVisiblePages(3);\n    } else if (window.innerWidth < 992) {\n      setMaxVisiblePages(5);\n    } else {\n      setMaxVisiblePages(7);\n    }\n  };\n\n  useEffect(() => {\n    handleWindowSizeChange();\n    window.addEventListener('resize', handleWindowSizeChange);\n    return () => {\n      window.removeEventListener('resize', handleWindowSizeChange);\n    };\n  }, []);\n\n  const isFirstPage = page === 1;\n  const isLastPage = page === totalPages;\n\n  const getPageRange = () => {\n    if (totalPages <= maxVisiblePages) {\n      return [...Array(totalPages)].map((_, index) => index + 1);\n    }\n\n    const middlePage = Math.floor(maxVisiblePages / 2);\n    let lowerBound = Math.max(page - middlePage, 1);\n    let upperBound = Math.min(page + middlePage, totalPages);\n\n    if (page <= middlePage) {\n      upperBound = maxVisiblePages;\n    } else if (page > totalPages - middlePage) {\n      lowerBound = totalPages - maxVisiblePages + 1;\n    }\n\n    const pageRange = [];\n    if (lowerBound !== 1) {\n      pageRange.push(1);\n      if (lowerBound !== 2) {\n        pageRange.push('...');\n      }\n    }\n\n    for (let i = lowerBound; i <= upperBound; i++) {\n      pageRange.push(i);\n    }\n\n    if (upperBound !== totalPages) {\n      if (upperBound !== totalPages - 1) {\n        pageRange.push('...');\n      }\n      pageRange.push(totalPages);\n    }\n\n    return pageRange;\n  };\n\n  const pageRange = getPageRange();\n\n  return (\n    <>\n      {totalPages > 1 && (\n        <Pagination className=\"mx-auto mb-5\">\n          <Pagination.First\n            onClick={() => handlePageChange(1)}\n            disabled={isFirstPage}\n          />\n          <Pagination.Prev\n            onClick={() => handlePageChange(Math.max(page - 1, 1))}\n            disabled={isFirstPage}\n          />\n          {pageRange.map((pageNumber, index) => {\n            if (pageNumber === '...') {\n              return <Pagination.Ellipsis key={index} />;\n            }\n            return (\n              <Pagination.Item\n                key={index}\n                active={pageNumber === page}\n                onClick={() => handlePageChange(pageNumber)}\n              >\n                {pageNumber}\n              </Pagination.Item>\n            );\n          })}\n          <Pagination.Next\n            onClick={() => handlePageChange(Math.min(page + 1, totalPages))}\n            disabled={isLastPage}\n          />\n          <Pagination.Last\n            onClick={() => handlePageChange(totalPages)}\n            disabled={isLastPage}\n          />\n        </Pagination>\n      )}\n    </>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useTranslation } from 'react-i18next';\n\nimport TodosList from 'components/TodosList/TodosList';\nimport AddTodosForm from 'components/TodosForm/AddTodosForm';\nimport TodosFilter from '../../components/TodosFilter/TodosFilter';\nimport TodosStatistics from '../../components/TodosStatistics/TodosStatistics';\nimport GetPagination from '../../components/GetPagination/GetPagination';\nimport { fetchAllTodos } from 'redux/todos/operations';\n\nimport {\n  Filtered,\n  getPage,\n  getTotalPages,\n  getTotalTodos,\n} from '../../redux/todos/selectors';\nimport { setPage } from '../../redux/todos/todosSlice';\n\nexport default function Todos() {\n  const page = useSelector(getPage);\n  const totalPages = useSelector(getTotalPages);\n  const query = useSelector(Filtered);\n  const totalTodos = useSelector(getTotalTodos);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllTodos({ page, query }));\n  }, [dispatch, page, query, totalTodos]);\n\n  const handlePageChange = newPage => {\n    dispatch(setPage(newPage));\n    dispatch(fetchAllTodos({ page: newPage, query }));\n  };\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>{t('helmet_title_todos_page')}</title>\n      </Helmet>\n      <div className=\"d-flex flex-column mt-5 pt-5\">\n        <AddTodosForm />\n        <h1 className=\"mb-3 pt-5 text-center\">{t('title_list_todo')}</h1>\n        <div className=\"d-flex flex-wrap\">\n          <TodosFilter filter={query} page={page} />\n          <TodosStatistics />\n        </div>\n        <TodosList />\n        <GetPagination\n          page={page}\n          totalPages={totalPages}\n          handlePageChange={handlePageChange}\n        />\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["_ref","isAccordionOpen","_jsx","Button","variant","className","concat","onClick","window","scrollTo","top","behavior","children","FaArrowUp","getTotalPages","state","todos","totalPages","getPage","page","getTotalTodos","totalTodos","Filtered","filter","getFilteredTodos","items","title","description","toLowerCase","includes","getDate","date","_date$slice$split","slice","split","_date$slice$split2","_slicedToArray","year","month","day","UpdateTodosForm","handleSubmit","descriptionUpdate","handleChange","reset","t","useTranslation","_jsxs","Form","onSubmit","controlId","as","rows","type","name","value","onChange","disabled","_id","createdAt","updatedAt","plannedDate","completedDate","overdueDate","_useState","useState","_useState2","isEditing","setIsEditing","_useState3","_useState4","setDescriptionUpdate","selectedLanguage","localStorage","getItem","dispatch","useDispatch","isCompleted","isOverdue","useEffect","Array","from","document","querySelectorAll","forEach","tooltip","bootstrap","Tooltip","handleToggle","e","target","blur","fetchCompletedToggle","toast","completedToggle","Accordion","eventKey","id","checked","isInvalid","defaultChecked","BsDatabaseCheck","fetchDeleteTodo","deleteTodo","MdOutlineDeleteForever","onExited","event","preventDefault","fetchUpdateTodo","_event$currentTarget","currentTarget","_Fragment","MdBorderColor","activeAccordionKey","setActiveAccordionKey","setIsAccordionOpen","filteredTodos","useSelector","length","prevStates","_toConsumableArray","_ref2","prevState","ScrollToTopButton","alwaysOpen","activeKey","onSelect","key","map","_ref3","TodosItem","selectedPeriod","setPlannedDate","selectedDate","setSelectedDate","MdCalendarMonth","DatePicker","selected","getPlannedDate","text","currentDate","Date","getTime","getFullYear","getMonth","console","log","PeriodsDate","setSelectedPeriod","Periods","style","width","label","inline","MyDatePicker","AddTodosForm","setTitle","setDescription","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","fetchAddTodo","visuallyHidden","required","placeholder","searchValue","setSearchValue","getFilter","CloseButton","clearFilter","GetPagination","handlePageChange","maxVisiblePages","setMaxVisiblePages","handleWindowSizeChange","innerWidth","addEventListener","removeEventListener","isFirstPage","isLastPage","pageRange","_","index","middlePage","Math","floor","lowerBound","max","upperBound","min","push","i","getPageRange","Pagination","pageNumber","active","Todos","query","fetchAllTodos","HelmetProvider","Helmet","TodosFilter","TodosStatistics","TodosList","newPage","setPage"],"sourceRoot":""}