{"version":3,"file":"static/js/639.eef5b824.chunk.js","mappings":"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","sources":["redux/todos/selectors.js","helpers/getDate.js","components/TodosForm/UpdateTodosForm.jsx","components/TodosItem/TodosItem.jsx","components/TodosList/TodosList.jsx","utils/MyDatePicker.js","constants/Periods.js","helpers/getPlannedDate.js","components/PeriodsDate/PeriodsDate.jsx","components/TodosForm/AddTodosForm.jsx","components/TodosFilter/TodosFilter.jsx","components/TodosStatistics/TodosStatistics.jsx","components/GetPagination/GetPagination.jsx","pages/Todos/Todos.js"],"sourcesContent":["export const getTotalPages = state => state.todos.totalPages;\n\nexport const getPage = state => state.todos.page;\n\nexport const getTotalTodos = state => state.todos.totalTodos;\n\nexport const Filtered = state => state.todos.filter;\n\nexport const getFilteredTodos = state => {\n  if (!state.todos.filter) {\n    return state.todos.items;\n  }\n  const result = state.todos.items.filter(({ title, description }) => {\n    return (\n      title.toLowerCase().includes(state.todos.filter.toLowerCase()) ||\n      description.toLowerCase().includes(state.todos.filter.toLowerCase())\n    );\n  });\n  return result;\n};\n\nexport const selectLoading = state => state.todos.loading;\n","export const getDate = date => {\n  if (date) {\n    const [year, month, day] = date.slice(0, 10).split('-');\n\n    return `${day}.${month}.${year}`;\n  }\n};\n","import { Button, Form } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nexport default function UpdateTodosForm({\n  handleSubmit,\n  descriptionUpdate,\n  handleChange,\n  description,\n  reset,\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          type=\"text\"\n          name=\"description\"\n          value={descriptionUpdate}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <Button\n        className=\"me-3\"\n        variant=\"primary\"\n        type=\"submit\"\n        disabled={descriptionUpdate === description}\n      >\n        {t('update_todo')}\n      </Button>\n      <Button variant=\"secondary\" onClick={() => reset()}>\n        {t('cancel')}\n      </Button>\n    </Form>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\nimport { MdOutlineDeleteForever, MdBorderColor } from 'react-icons/md';\nimport { BsDatabaseCheck } from 'react-icons/bs';\n\n// import propTypes from 'prop-types';\n\nimport {\n  fetchDeleteTodo,\n  fetchUpdateTodo,\n  fetchCompletedToggle,\n} from '../../redux/todos/operations';\nimport { getDate } from '../../helpers/getDate';\n\nimport { Accordion, Button, Form } from 'react-bootstrap';\nimport UpdateTodosForm from 'components/TodosForm/UpdateTodosForm';\n\nconst TodosItem = ({\n  _id,\n  title,\n  description,\n  createdAt,\n  updatedAt,\n  plannedDate,\n  completedDate,\n  overdueDate,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [descriptionUpdate, setDescriptionUpdate] = useState(description);\n\n  const selectedLanguage = localStorage.getItem('selectedLanguage');\n\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation();\n\n  const isCompleted = completedDate !== null;\n  const isOverdue = overdueDate !== null;\n\n  useEffect(() => {\n    const tooltips = Array.from(\n      document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')\n    );\n    tooltips.forEach(tooltip => {\n      new window.bootstrap.Tooltip(tooltip);\n    });\n  }, [selectedLanguage]);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'description':\n        setDescriptionUpdate(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(fetchUpdateTodo({ _id: _id, description: descriptionUpdate }));\n\n    toast.success(`${t('todo_update')}`);\n\n    setIsEditing(false);\n  };\n\n  const deleteTodo = _id => {\n    dispatch(fetchDeleteTodo(_id));\n\n    toast.success(`${t('todo_deleted')}`);\n  };\n\n  const completedToggle = _id => {\n    dispatch(fetchCompletedToggle(_id));\n\n    !isCompleted\n      ? toast.success(`${t('todo_completed')}`)\n      : toast.success(`${t('todo_not_completed')}`);\n  };\n\n  const handleToggle = (e, _id) => {\n    e.target.blur();\n\n    completedToggle(_id);\n  };\n\n  const reset = () => {\n    setIsEditing(false);\n    setDescriptionUpdate(description);\n  };\n\n  return (\n    <Accordion.Item eventKey={_id}>\n      <div className=\"d-flex gap-3 align-items-center px-3\">\n        {!isOverdue && (\n          <Form.Check\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            data-bs-title={`${t('is_completed')}`}\n            aria-label=\"option 1\"\n            id={`toggle-check-${_id}`}\n            type=\"checkbox\"\n            variant=\"outline-primary\"\n            checked={isCompleted}\n            disabled={isEditing === true}\n            value=\"1\"\n            onChange={e => handleToggle(e, _id)}\n          />\n        )}\n        {isOverdue && (\n          <Form.Check\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            data-bs-title={`${t('is_overdue')}`}\n            isInvalid\n            defaultChecked\n            type=\"radio\"\n            id={`toggle-check-${_id}`}\n          />\n        )}\n        <Accordion.Header className=\"w-100\">\n          <h5\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            data-bs-title={title}\n            className=\"w-100 mb-0 text-truncate custom-accordion-header\"\n          >\n            {title}\n          </h5>\n        </Accordion.Header>\n        {isCompleted || isOverdue ? (\n          <Button\n            key={`archive-${_id}`}\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            data-bs-title={`${t('add_to_archive')}`}\n            className=\"ms-auto btn btn-success\"\n            type=\"button\"\n            // onClick={() => toArchiveTodo(_id)}\n          >\n            <BsDatabaseCheck />\n          </Button>\n        ) : (\n          <Button\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            data-bs-title={`${t('delete')}`}\n            disabled={isEditing}\n            className=\"ms-auto btn btn-danger\"\n            type=\"button\"\n            onClick={() => deleteTodo(_id)}\n          >\n            <MdOutlineDeleteForever />\n          </Button>\n        )}\n      </div>\n      <Accordion.Body className=\"p-3\" onExited={() => setIsEditing(false)}>\n        {!isEditing ? (\n          <>\n            <p className=\"mb-3\">{description}</p>\n\n            <div className=\"d-flex flex-wrap gap-3 align-items-center\">\n              <div>\n                {t('created')}: <b>{getDate(createdAt)}</b>\n              </div>\n              <div>\n                {t('updated')}: <b> {getDate(updatedAt)}</b>\n              </div>\n              <div>\n                {t('planned_date')}: <b> {getDate(plannedDate)}</b>\n              </div>\n              {overdueDate === null && (\n                <div className={isCompleted ? 'text-success' : ''}>\n                  {t('completed')}:\n                  <b> {isCompleted ? getDate(completedDate) : '??.??.????'}</b>\n                </div>\n              )}\n              {isOverdue && (\n                <div className=\"text-danger\">\n                  {t('is_overdue')}: <b>{getDate(overdueDate)}</b>\n                </div>\n              )}\n              <Button\n                data-bs-title={`${t('edit')}`}\n                disabled={isCompleted || isOverdue}\n                className=\"ms-auto btn btn-primary\"\n                type=\"button\"\n                onClick={() => setIsEditing(true)}\n              >\n                <MdBorderColor />\n              </Button>\n            </div>\n          </>\n        ) : (\n          <UpdateTodosForm\n            handleSubmit={handleSubmit}\n            descriptionUpdate={descriptionUpdate}\n            handleChange={handleChange}\n            description={description}\n            reset={reset}\n          />\n        )}\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n};\n\n// TodosItem.propTypes = {\n//   _id: propTypes.string.isRequired,\n//   title: propTypes.string.isRequired,\n//   description: propTypes.string.isRequired,\n//   createdAt: propTypes.string.isRequired,\n//   updatedAt: propTypes.string.isRequired,\n//   completedDate: propTypes.string,\n// };\n\nexport default TodosItem;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Accordion } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { getFilteredTodos } from '../../redux/todos/selectors';\nimport TodosItem from '../TodosItem/TodosItem';\n\nconst TodosList = () => {\n  const filteredTodos = useSelector(getFilteredTodos);\n\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"mb-5\">\n      {filteredTodos.length !== 0 ? (\n        <Accordion alwaysOpen>\n          {filteredTodos.map(\n            ({\n              _id,\n              title,\n              description,\n              createdAt,\n              updatedAt,\n              plannedDate,\n              completedDate,\n              overdueDate,\n            }) => {\n              return (\n                <TodosItem\n                  key={_id}\n                  _id={_id}\n                  title={title}\n                  description={description}\n                  createdAt={createdAt}\n                  updatedAt={updatedAt}\n                  plannedDate={plannedDate}\n                  completedDate={completedDate}\n                  overdueDate={overdueDate}\n                />\n              );\n            }\n          )}\n        </Accordion>\n      ) : (\n        <div className=\"text-center py-5 border rounded bs-accordion-bg\">\n          <p>{t('no_todos_text')}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TodosList;\n","import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { MdCalendarMonth } from 'react-icons/md';\n\nfunction MyDatePicker({ selectedPeriod, setPlannedDate }) {\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    selectedPeriod !== 'date' && setSelectedDate(null);\n  }, [selectedPeriod]);\n\n  return (\n    <div\n      className={`d-flex gap-1 align-items-center ${\n        selectedPeriod === 'date' && 'text-primary'\n      }`}\n    >\n      <MdCalendarMonth />\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          setSelectedDate(date);\n          setPlannedDate(date);\n        }}\n        className=\"w-100 text-center\"\n      />\n    </div>\n  );\n}\n\nexport default MyDatePicker;\n","export const Periods = [\n  'week',\n  'month',\n  '3_months',\n  'half_year',\n  'year',\n  '3_years',\n  '5_years',\n];\n","export const getPlannedDate = ({ text, plannedDate }) => {\n  const currentDate = new Date();\n  let date;\n\n  switch (text) {\n    case 'week':\n      date = new Date(currentDate.getTime() + 7 * 24 * 60 * 60 * 1000);\n      break;\n    case 'month':\n      date = new Date(\n        currentDate.getFullYear(),\n        currentDate.getMonth() + 1,\n        currentDate.getDate()\n      );\n      break;\n    case '3_months':\n      date = new Date(\n        currentDate.getFullYear(),\n        currentDate.getMonth() + 3,\n        currentDate.getDate()\n      );\n      break;\n    case 'half_year':\n      date = new Date(\n        currentDate.getFullYear(),\n        currentDate.getMonth() + 6,\n        currentDate.getDate()\n      );\n      break;\n    case 'year':\n      date = new Date(\n        currentDate.getFullYear() + 1,\n        currentDate.getMonth(),\n        currentDate.getDate()\n      );\n      break;\n    case '3_years':\n      date = new Date(\n        currentDate.getFullYear() + 3,\n        currentDate.getMonth(),\n        currentDate.getDate()\n      );\n      break;\n    case '5_years':\n      date = new Date(\n        currentDate.getFullYear() + 5,\n        currentDate.getMonth(),\n        currentDate.getDate()\n      );\n      break;\n\n    case 'date':\n      date = plannedDate;\n      break;\n\n    default:\n      break;\n  }\n\n  return date;\n};\n","import { Form } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport MyDatePicker from '../../utils/MyDatePicker';\nimport { Periods } from '../../constants/Periods';\nimport { getPlannedDate } from '../../helpers/getPlannedDate';\n\nexport default function PeriodsDate({\n  plannedDate,\n  setPlannedDate,\n  selectedPeriod,\n  setSelectedPeriod,\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"d-flex flex-wrap gap-3 align-items-center\">\n      {Periods.map(text => (\n        <Form.Check\n          style={{ width: '122px' }}\n          key={`${t(text)}`}\n          checked={selectedPeriod === text}\n          label={`${t(text)}`}\n          name=\"plannedDate\"\n          type=\"radio\"\n          id={`inline-radio-${text}`}\n          onChange={() => {\n            setSelectedPeriod(text);\n            setPlannedDate(getPlannedDate({ text, plannedDate }));\n          }}\n        />\n      ))}\n      <Form.Label>\n        <Form.Check\n          key=\"date\"\n          checked={selectedPeriod === 'date'}\n          inline\n          name=\"plannedDate\"\n          type=\"radio\"\n          className=\"btn-check\"\n          id=\"inline-radio-date\"\n          onChange={() => {\n            const text = 'date';\n            setSelectedPeriod(text);\n            setPlannedDate(getPlannedDate({ text, plannedDate }));\n          }}\n        />\n        <MyDatePicker\n          selectedPeriod={selectedPeriod}\n          setPlannedDate={setPlannedDate}\n        />\n      </Form.Label>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Accordion, Button, Form } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\n\nimport { fetchAddTodo } from '../../redux/todos/operations';\nimport PeriodsDate from '../PeriodsDate/PeriodsDate';\n\nexport default function AddTodosForm() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [plannedDate, setPlannedDate] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState('');\n\n  const [activeAccordionKey, setActiveAccordionKey] = useState(null);\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        break;\n\n      case 'description':\n        setDescription(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(fetchAddTodo({ title, description, plannedDate }));\n    toast.success(`${t('todo_added')}`);\n    reset();\n  };\n\n  const reset = () => {\n    setTitle('');\n    setDescription('');\n    setPlannedDate('');\n    setSelectedPeriod('');\n  };\n\n  const handleCancelClick = () => {\n    reset();\n    if (activeAccordionKey === '0') {\n      setActiveAccordionKey(null);\n    }\n  };\n\n  const handleAccordionSelect = key => {\n    setActiveAccordionKey(key);\n  };\n\n  return (\n    <Accordion activeKey={activeAccordionKey} onSelect={handleAccordionSelect}>\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header>\n          <h3 className=\"mb-0 ms-auto \">{t('form_add_todo_title')}</h3>\n        </Accordion.Header>\n        <Accordion.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label visuallyHidden>{t('title_todo')}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"title\"\n                required\n                value={title}\n                onChange={handleChange}\n                placeholder={t('placeholder_title')}\n              />\n            </Form.Group>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label visuallyHidden>{t('description')}</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={6}\n                type=\"text\"\n                name=\"description\"\n                value={description}\n                onChange={handleChange}\n                placeholder={t('placeholder_description')}\n              />\n            </Form.Group>\n            <div key=\"inline-radio\" className=\"d-flex flex-wrap mb-3\">\n              <h5 className=\"d-inline-block me-3 mb-3\">\n                {`${t('planned_date')}`}:\n              </h5>\n              <PeriodsDate\n                plannedDate={plannedDate}\n                setPlannedDate={setPlannedDate}\n                selectedPeriod={selectedPeriod}\n                setSelectedPeriod={setSelectedPeriod}\n              />\n            </div>\n            <Button\n              className=\"me-3\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={!title || !description || !selectedPeriod}\n            >\n              {t('add_todo')}\n            </Button>\n            <Button variant=\"secondary\" onClick={handleCancelClick}>\n              {t('cancel')}\n            </Button>\n          </Form>\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, CloseButton } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { getFilter, clearFilter } from '../../redux/todos/todosSlice';\nimport { Filtered } from '../../redux/todos/selectors';\n\nimport propTypes from 'prop-types';\n\nconst TodosFilter = ({ filter }) => {\n  const filterValue = useSelector(Filtered);\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = event => {\n    const { value } = event.currentTarget;\n    dispatch(getFilter(value));\n  };\n\n  const handleClearFilter = event => {\n    event.target.blur();\n    dispatch(clearFilter());\n  };\n\n  return (\n    <Form className=\"d-flex mb-3\">\n      <Form.Label className=\"mb-0 d-flex align-items-center\">\n        <Form.Control\n          type=\"text\"\n          name={filter}\n          value={filterValue}\n          onChange={handleChangeFilter}\n          placeholder={t('placeholder_search')}\n          className=\"me-2\"\n          aria-label=\"Search\"\n        />\n        <CloseButton onClick={handleClearFilter} />\n      </Form.Label>\n    </Form>\n  );\n};\n\nTodosFilter.propTypes = {\n  filter: propTypes.string.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n// import { Accordion } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { getTotalTodos, getTotalPages } from '../../redux/todos/selectors';\n\nconst TodosStatistics = () => {\n  const totalTodos = useSelector(getTotalTodos);\n  const totalPages = useSelector(getTotalPages);\n\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"d-flex flex-wrap gap-3 align-items-center mb-3 ms-auto\">\n      <div>\n        {t('all_todos')}: <b>{totalTodos}</b>\n      </div>\n      <div>\n        {t('page')}: <b>{totalPages}</b>\n      </div>\n      <div>\n        {t('completed')}: <b>0</b>\n      </div>\n      <div>\n        {t('is_overdue')}: <b>0</b>\n      </div>\n      <div>\n        {t('archive')}: <b>0</b>\n      </div>\n    </div>\n  );\n};\n\nexport default TodosStatistics;\n","import React, { useState, useEffect } from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\n\nexport default function GetPagination({ page, totalPages, handlePageChange }) {\n  const [maxVisiblePages, setMaxVisiblePages] = useState(5);\n\n  const handleWindowSizeChange = () => {\n    if (window.innerWidth < 425) {\n      setMaxVisiblePages(1);\n    } else if (window.innerWidth < 576) {\n      setMaxVisiblePages(3);\n    } else if (window.innerWidth < 992) {\n      setMaxVisiblePages(5);\n    } else {\n      setMaxVisiblePages(7);\n    }\n  };\n\n  useEffect(() => {\n    handleWindowSizeChange();\n    window.addEventListener('resize', handleWindowSizeChange);\n    return () => {\n      window.removeEventListener('resize', handleWindowSizeChange);\n    };\n  }, []);\n\n  const isFirstPage = page === 1;\n  const isLastPage = page === totalPages;\n\n  const getPageRange = () => {\n    if (totalPages <= maxVisiblePages) {\n      return [...Array(totalPages)].map((_, index) => index + 1);\n    }\n\n    const middlePage = Math.floor(maxVisiblePages / 2);\n    let lowerBound = Math.max(page - middlePage, 1);\n    let upperBound = Math.min(page + middlePage, totalPages);\n\n    if (page <= middlePage) {\n      upperBound = maxVisiblePages;\n    } else if (page > totalPages - middlePage) {\n      lowerBound = totalPages - maxVisiblePages + 1;\n    }\n\n    const pageRange = [];\n    if (lowerBound !== 1) {\n      pageRange.push(1);\n      if (lowerBound !== 2) {\n        pageRange.push('...');\n      }\n    }\n\n    for (let i = lowerBound; i <= upperBound; i++) {\n      pageRange.push(i);\n    }\n\n    if (upperBound !== totalPages) {\n      if (upperBound !== totalPages - 1) {\n        pageRange.push('...');\n      }\n      pageRange.push(totalPages);\n    }\n\n    return pageRange;\n  };\n\n  const pageRange = getPageRange();\n\n  return (\n    <>\n      {totalPages > 1 && (\n        <Pagination className=\"mx-auto\">\n          <Pagination.First\n            onClick={() => handlePageChange(1)}\n            disabled={isFirstPage}\n          />\n          <Pagination.Prev\n            onClick={() => handlePageChange(Math.max(page - 1, 1))}\n            disabled={isFirstPage}\n          />\n          {pageRange.map((pageNumber, index) => {\n            if (pageNumber === '...') {\n              return <Pagination.Ellipsis key={index} />;\n            }\n            return (\n              <Pagination.Item\n                key={index}\n                active={pageNumber === page}\n                onClick={() => handlePageChange(pageNumber)}\n              >\n                {pageNumber}\n              </Pagination.Item>\n            );\n          })}\n          <Pagination.Next\n            onClick={() => handlePageChange(Math.min(page + 1, totalPages))}\n            disabled={isLastPage}\n          />\n          <Pagination.Last\n            onClick={() => handlePageChange(totalPages)}\n            disabled={isLastPage}\n          />\n        </Pagination>\n      )}\n    </>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useTranslation } from 'react-i18next';\n\nimport TodosList from 'components/TodosList/TodosList';\nimport AddTodosForm from 'components/TodosForm/AddTodosForm';\nimport TodosFilter from '../../components/TodosFilter/TodosFilter';\nimport TodosStatistics from '../../components/TodosStatistics/TodosStatistics';\nimport GetPagination from '../../components/GetPagination/GetPagination';\nimport { fetchAllTodos } from 'redux/todos/operations';\n\nimport {\n  Filtered,\n  getPage,\n  getTotalPages,\n  getTotalTodos,\n} from '../../redux/todos/selectors';\nimport { setPage } from '../../redux/todos/todosSlice';\n\nexport default function Todos() {\n  const page = useSelector(getPage);\n  const totalPages = useSelector(getTotalPages);\n  const query = useSelector(Filtered);\n  const totalTodos = useSelector(getTotalTodos);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllTodos({ page, query }));\n  }, [dispatch, page, query, totalTodos]);\n\n  const handlePageChange = newPage => {\n    dispatch(setPage(newPage));\n    dispatch(fetchAllTodos({ page: newPage, query }));\n  };\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>{t('helmet_title_todos_page')}</title>\n      </Helmet>\n      <div className=\"d-flex flex-column min-vh-100\">\n        <AddTodosForm />\n        <h1 className=\"mb-3 pt-5 text-center\">{t('title_list_todo')}</h1>\n        <div className=\"d-flex flex-wrap\">\n          <TodosFilter filter={query} page={page} />\n          <TodosStatistics />\n        </div>\n        <TodosList />\n        <GetPagination\n          page={page}\n          totalPages={totalPages}\n          handlePageChange={handlePageChange}\n        />\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["getTotalPages","state","todos","totalPages","getPage","page","getTotalTodos","totalTodos","Filtered","filter","getFilteredTodos","items","_ref","title","description","toLowerCase","includes","getDate","date","_date$slice$split","slice","split","_date$slice$split2","_slicedToArray","year","month","day","concat","UpdateTodosForm","handleSubmit","descriptionUpdate","handleChange","reset","t","useTranslation","_jsxs","Form","onSubmit","children","_jsx","className","controlId","as","rows","type","name","value","onChange","Button","variant","disabled","onClick","_id","createdAt","updatedAt","plannedDate","completedDate","overdueDate","_useState","useState","_useState2","isEditing","setIsEditing","_useState3","_useState4","setDescriptionUpdate","selectedLanguage","localStorage","getItem","dispatch","useDispatch","isCompleted","isOverdue","useEffect","Array","from","document","querySelectorAll","forEach","tooltip","window","bootstrap","Tooltip","handleToggle","e","target","blur","fetchCompletedToggle","toast","completedToggle","Accordion","eventKey","id","checked","isInvalid","defaultChecked","BsDatabaseCheck","fetchDeleteTodo","deleteTodo","MdOutlineDeleteForever","onExited","event","preventDefault","fetchUpdateTodo","_event$currentTarget","currentTarget","_Fragment","MdBorderColor","filteredTodos","useSelector","length","alwaysOpen","map","TodosItem","selectedPeriod","setPlannedDate","selectedDate","setSelectedDate","MdCalendarMonth","DatePicker","selected","Periods","getPlannedDate","text","currentDate","Date","getTime","getFullYear","getMonth","PeriodsDate","setSelectedPeriod","style","width","label","inline","MyDatePicker","AddTodosForm","setTitle","setDescription","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","activeAccordionKey","setActiveAccordionKey","activeKey","onSelect","key","fetchAddTodo","visuallyHidden","required","placeholder","filterValue","getFilter","CloseButton","clearFilter","GetPagination","handlePageChange","maxVisiblePages","setMaxVisiblePages","handleWindowSizeChange","innerWidth","addEventListener","removeEventListener","isFirstPage","isLastPage","pageRange","_toConsumableArray","_","index","middlePage","Math","floor","lowerBound","max","upperBound","min","push","i","getPageRange","Pagination","pageNumber","active","Todos","query","fetchAllTodos","HelmetProvider","Helmet","TodosFilter","TodosStatistics","TodosList","newPage","setPage"],"sourceRoot":""}