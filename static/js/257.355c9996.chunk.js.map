{"version":3,"file":"static/js/257.355c9996.chunk.js","mappings":"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","sources":["components/Navigation/Navigation.jsx","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","helpers/ThemeSwitch.jsx","helpers/LangBtn.jsx","components/AppBar/AppBar.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { useAuth } from '../../hooks/useAuth';\n\nexport const Navigation = ({ showMenu, setShowMenu }) => {\n  const { isLoggedIn } = useAuth();\n\n  const { t } = useTranslation();\n\n  const handleClick = event => {\n    event.target.blur();\n    setShowMenu(false);\n  };\n\n  return (\n    <div\n      className={`d-flex ${\n        showMenu ? 'mx-auto my-5 flex-column gap-5' : 'me-auto gap-3'\n      }`}\n    >\n      <NavLink\n        className=\"nav-link d-flex align-items-center justify-content-center\"\n        to=\"/\"\n        onClick={handleClick}\n      >\n        {t('header_home')}\n      </NavLink>\n      {isLoggedIn && (\n        <>\n          <NavLink\n            className=\"nav-link d-flex align-items-center justify-content-center\"\n            to=\"/profile\"\n            onClick={handleClick}\n          >\n            {t('header_profile')}\n          </NavLink>\n          <NavLink\n            className=\"nav-link d-flex align-items-center justify-content-center\"\n            to=\"/wheelOfLife\"\n            onClick={handleClick}\n          >\n            {t('header_wheel_of_life')}\n          </NavLink>\n          <NavLink\n            className=\"nav-link d-flex align-items-center justify-content-center\"\n            to=\"/todos\"\n            onClick={handleClick}\n          >\n            {t('header_todos')}\n          </NavLink>\n        </>\n      )}\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\n\nimport { Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { logOut } from 'redux/auth/authOperations';\nimport { useAuth } from '../../hooks/useAuth';\n\nexport const UserMenu = ({ showMenu, setShowMenu }) => {\n  const { user } = useAuth();\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(logOut());\n    setShowMenu(false);\n  };\n\n  return (\n    <div\n      className={\n        showMenu ? 'd-flex flex-column gap-5' : 'd-flex flex-wrap gap-3'\n      }\n    >\n      <div className=\"d-flex mx-auto align-items-center\">\n        <div style={{ marginRight: '10px' }}>\n          <img src={user.avatarURL} alt=\"avatar\" width={40} height={40} />\n        </div>\n        <p style={{ margin: '0' }}>\n          {t('welcome')}, <b>{user.name}!</b>\n        </p>\n      </div>\n      <Button\n        className=\"mx-auto\"\n        type=\"button \"\n        variant=\"primary\"\n        onClick={handleClick}\n      >\n        {t('logout')}\n      </Button>\n    </div>\n  );\n};\n","import { NavLink } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\n\nimport { useTranslation } from 'react-i18next';\n\nexport const AuthNav = ({ showMenu, setShowMenu }) => {\n  const { t } = useTranslation();\n\n  const handleClick = event => {\n    event.target.blur();\n    setShowMenu(false);\n  };\n\n  return (\n    <>\n      <Button\n        as={NavLink}\n        variant=\"primary\"\n        to=\"/register\"\n        className={`${showMenu ? 'mb-5 mx-auto' : 'me-3'}`}\n        onClick={handleClick}\n      >\n        {t('register')}\n      </Button>\n      <Button\n        as={NavLink}\n        variant=\"primary\"\n        to=\"/login\"\n        className={`${showMenu ? 'mx-auto' : ''}`}\n        onClick={handleClick}\n      >\n        {t('login')}\n      </Button>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { DarkModeSwitch } from 'react-toggle-dark-mode';\n\nexport const ThemeSwitch = () => {\n  const [isDarkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      const htmlElement = document.querySelector('html');\n      htmlElement.setAttribute('data-bs-theme', savedTheme);\n      setDarkMode(savedTheme === 'dark');\n    }\n  }, []);\n\n  const toggleTheme = checked => {\n    const htmlElement = document.querySelector('html');\n    const currentTheme = htmlElement.getAttribute('data-bs-theme');\n\n    if (currentTheme === 'light') {\n      htmlElement.setAttribute('data-bs-theme', 'dark');\n    } else {\n      htmlElement.setAttribute('data-bs-theme', 'light');\n    }\n\n    setDarkMode(checked);\n\n    localStorage.setItem('theme', checked ? 'dark' : 'light');\n  };\n\n  return (\n    <DarkModeSwitch\n      moonColor=\"#FFD700\"\n      sunColor=\"#FFD700\"\n      checked={isDarkMode}\n      onChange={toggleTheme}\n    />\n  );\n};\n","import React, { useContext } from 'react';\n\nimport { ButtonGroup, Button } from 'react-bootstrap';\n\nimport { LanguageContext } from 'utils/LanguageContext';\n\nconst LangBtn = () => {\n  const { currentLanguage, changeLanguage } = useContext(LanguageContext);\n\n  const handleLanguageChange = lang => {\n    changeLanguage(lang);\n  };\n\n  return (\n    <ButtonGroup className=\"p-1 btn-group\" role=\"group\">\n      <Button\n        type=\"button\"\n        onClick={() => handleLanguageChange('ua')}\n        className={`py-1 px-2 border rounded-start-pill ${\n          currentLanguage === 'ua' ? 'active' : ''\n        }`}\n      >\n        UA\n      </Button>\n      <Button\n        type=\"button\"\n        onClick={() => handleLanguageChange('en')}\n        className={`py-1 px-2 border rounded-end-circle ${\n          currentLanguage === 'en' ? 'active' : ''\n        }`}\n      >\n        EN\n      </Button>\n    </ButtonGroup>\n  );\n};\n\nexport default LangBtn;\n","import React, { useState } from 'react';\n\nimport { Navbar, Nav } from 'react-bootstrap';\n\nimport { Navigation } from '../Navigation/Navigation';\nimport { UserMenu } from '../UserMenu/UserMenu';\nimport { AuthNav } from '../AuthNav/AuthNav';\nimport { useAuth } from '../../hooks/useAuth';\nimport { ThemeSwitch } from '../../helpers/ThemeSwitch';\nimport LangBtn from '../../helpers/LangBtn';\nimport logo from '../../image/logo192.png';\n\nconst AppBar = () => {\n  const { isLoggedIn } = useAuth();\n  const [showMenu, setShowMenu] = useState(false);\n\n  const handleMenuToggle = () => {\n    const bodyElement = document.body;\n\n    setShowMenu(!showMenu);\n\n    if (!showMenu) {\n      bodyElement.style.overflow = 'hidden';\n    } else {\n      bodyElement.style.overflow = 'auto';\n    }\n  };\n\n  return (\n    <header>\n      <Navbar\n        collapseOnSelect\n        fixed=\"top\"\n        expanded={showMenu}\n        expand=\"lg\"\n        className=\"p-3 gap-3 bg-dark-subtle\"\n        onToggle={handleMenuToggle}\n      >\n        <Navbar.Brand className=\"me-0\">\n          <img src={logo} alt=\"Wheel Of Life\" width={36} />\n        </Navbar.Brand>\n        <LangBtn />\n        <ThemeSwitch />\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse\n          id=\"responsive-navbar-nav\"\n          className={showMenu ? 'vh-100 d-flex gap-5 flex-column' : ''}\n        >\n          <Nav className=\"w-100\">\n            <Navigation showMenu={showMenu} setShowMenu={setShowMenu} />\n            {isLoggedIn ? (\n              <UserMenu showMenu={showMenu} setShowMenu={setShowMenu} />\n            ) : (\n              <AuthNav showMenu={showMenu} setShowMenu={setShowMenu} />\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default AppBar;\n"],"names":["Navigation","_ref","showMenu","setShowMenu","isLoggedIn","useAuth","t","useTranslation","handleClick","event","target","blur","_jsxs","className","concat","children","_jsx","NavLink","to","onClick","_Fragment","UserMenu","user","dispatch","useDispatch","style","marginRight","src","avatarURL","alt","width","height","margin","name","Button","type","variant","logOut","AuthNav","as","ThemeSwitch","_useState","useState","_useState2","_slicedToArray","isDarkMode","setDarkMode","useEffect","savedTheme","localStorage","getItem","document","querySelector","setAttribute","DarkModeSwitch","moonColor","sunColor","checked","onChange","htmlElement","getAttribute","setItem","_useContext","useContext","LanguageContext","currentLanguage","changeLanguage","handleLanguageChange","lang","ButtonGroup","role","Navbar","collapseOnSelect","fixed","expanded","expand","onToggle","bodyElement","body","overflow","logo","LangBtn","id","Nav"],"sourceRoot":""}