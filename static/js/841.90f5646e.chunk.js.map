{"version":3,"file":"static/js/841.90f5646e.chunk.js","mappings":"+LA4BA,UAjBgB,WACd,IAAMA,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IACpBC,GAAaJ,EAAAA,EAAAA,IAAYK,EAAAA,IACzBC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,IAAc,CAAEV,KAAAA,EAAMG,MAAAA,IACjC,GAAG,CAACI,EAAUP,EAAMG,EAAOE,KAGzBM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACjCF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,KAGhB,C,qJCAA,EArB0B,SAAHC,GAA6B,IAAvBC,EAAeD,EAAfC,gBAQ3B,OACEL,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACLC,QAAQ,kBACRN,UAAS,8DAAAO,OACPH,EAAkB,UAAY,aAEhCI,QAbgB,WAClBC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,UAEd,EAQyBX,UAErBF,EAAAA,EAAAA,KAACc,EAAAA,IAAS,CAACb,UAAU,wBAG3B,E,8ECrBe,SAASc,EAAeX,GAMnC,IALFY,EAAYZ,EAAZY,aACAC,EAAiBb,EAAjBa,kBACAC,EAAYd,EAAZc,aACAC,EAAWf,EAAXe,YACAC,EAAKhB,EAALgB,MAEQC,GAAMC,EAAAA,EAAAA,MAAND,EAER,OACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,SAAUT,EAAad,SAAA,EAC3BF,EAAAA,EAAAA,KAACwB,EAAAA,EAAAA,MAAU,CAACvB,UAAU,OAAOyB,UAAU,+BAA8BxB,UACnEF,EAAAA,EAAAA,KAACwB,EAAAA,EAAAA,QAAY,CACXG,GAAG,WACHC,KAAM,EACNC,KAAK,OACLC,KAAK,cACLC,MAAOd,EACPe,SAAUd,OAGdlB,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACLL,UAAU,OACVM,QAAQ,UACRsB,KAAK,SACLI,SAAUhB,IAAsBE,EAAYjB,SAE3CmB,EAAE,kBAELrB,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,QAAQ,YAAYE,QAAS,kBAAMW,GAAO,EAAClB,SAChDmB,EAAE,cAIX,C,gCClCe,SAASa,EAAaC,GACnC,IAAAC,GAAkCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAW9B,OATAxC,EAAAA,EAAAA,YAAU,WACR,GAAIqC,EAAM,CACR,IAAMO,EAAeC,IAAAA,GAAAA,QACfC,EAAQD,IAAOR,GAAMU,GAAGH,GAAcI,OAAO,cAEnDL,EAAaG,EACf,CACF,GAAG,CAACT,IAEGK,CACT,CCcA,IA4PA,EA5PkB,SAAHpC,GAWR,IAVL2C,EAAG3C,EAAH2C,IACAC,EAAK5C,EAAL4C,MACA7B,EAAWf,EAAXe,YACA8B,EAAS7C,EAAT6C,UACAC,EAAS9C,EAAT8C,UACAC,EAAW/C,EAAX+C,YACAC,EAAahD,EAAbgD,cACAC,EAAWjD,EAAXiD,YACAC,EAAWlD,EAAXkD,YACAC,EAAWnD,EAAXmD,YAEAnB,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CoB,EAASlB,EAAA,GAAEmB,EAAYnB,EAAA,GAC9BoB,GAAkDrB,EAAAA,EAAAA,UAASlB,GAAYwC,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAAhEzC,EAAiB0C,EAAA,GAAEC,EAAoBD,EAAA,GAExC/D,GAAWC,EAAAA,EAAAA,MAETwB,GAAMC,EAAAA,EAAAA,MAAND,EAEFwC,EAAgC,OAAlBT,EACdU,EAA4B,OAAhBT,EACZU,EAA4B,OAAhBT,EACZU,EAA4B,OAAhBT,EAEZU,GAAgBC,EAAAA,EAAAA,KAEhBC,EAAiBjC,EAAae,GAC9BmB,EAAiBlC,EAAagB,GAC9BmB,EAAmBnC,EAAaiB,GAChCmB,EAAqBpC,EAAakB,GAClCmB,EAAmBrC,EAAamB,GAChCmB,EAAmBtC,EAAaoB,GAChCmB,EAAmBvC,EAAaqB,GAuChCmB,EAAe,SAACC,EAAG5B,GACvB4B,EAAEC,OAAOC,OATa,SAAA9B,GACtBnD,GAASkF,EAAAA,EAAAA,IAAqB/B,IAE7Bc,EAEGkB,EAAAA,GAAAA,QAAc,GAADvE,OAAIa,EAAE,wBADnB0D,EAAAA,GAAAA,QAAc,GAADvE,OAAIa,EAAE,mBAEzB,CAKE2D,CAAgBjC,EAClB,EAOA,OACExB,EAAAA,EAAAA,MAAC0D,EAAAA,EAAAA,KAAc,CAACC,SAAUnC,EAAI7C,SAAA,EAC5BqB,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,uCAAsCC,SAAA,EACjD4D,IACA9D,EAAAA,EAAAA,KAACmF,EAAAA,EAAc,CACbC,UAAU,MACVC,SAASrF,EAAAA,EAAAA,KAACsF,EAAAA,EAAO,CAAApF,SAAEmB,EAAE,kBAA2BnB,UAEhDF,EAAAA,EAAAA,KAACwB,EAAAA,EAAAA,MAAU,CACT,aAAW,WACX+D,GAAE,gBAAA/E,OAAkBuC,GACpBlB,KAAK,WACLtB,QAAQ,kBACRiF,QAAS3B,EACT5B,UAAwB,IAAduB,EACVzB,MAAM,IACNC,SAAU,SAAA2C,GAAC,OAAID,EAAaC,EAAG5B,EAAI,MAIxCe,IACC9D,EAAAA,EAAAA,KAACmF,EAAAA,EAAc,CACbC,UAAU,MACVC,SAASrF,EAAAA,EAAAA,KAACsF,EAAAA,EAAO,CAAApF,SAAEmB,EAAE,gBAAyBnB,UAE9CF,EAAAA,EAAAA,KAACwB,EAAAA,EAAAA,MAAU,CACTiE,WAAS,EACTC,gBAAc,EACd7D,KAAK,QACL0D,GAAE,gBAAA/E,OAAkBuC,QAI1B/C,EAAAA,EAAAA,KAACiF,EAAAA,EAAAA,OAAgB,CAAChF,UAAU,QAAOC,SAChC+D,GACCjE,EAAAA,EAAAA,KAACmF,EAAAA,EAAc,CACbC,UAAU,MACVC,SAASrF,EAAAA,EAAAA,KAACsF,EAAAA,EAAO,CAAApF,SAAE8C,IAAiB9C,UAEpCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAC7D8C,OAILhD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAC7D8C,MAINa,GAAeC,GACd9D,EAAAA,EAAAA,KAACmF,EAAAA,EAAc,CACbC,UAAU,MACVC,SAASrF,EAAAA,EAAAA,KAACsF,EAAAA,EAAO,CAAApF,SAAA,GAAAM,OAAKa,EAAE,qBAA+BnB,UAEvDF,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAELL,UAAU,0BACV4B,KAAK,SACL3B,UAEAF,EAAAA,EAAAA,KAAC2F,EAAAA,IAAe,KAAG,WAAAnF,OALHuC,OASpB/C,EAAAA,EAAAA,KAACmF,EAAAA,EAAc,CACbC,UAAU,MACVC,SAASrF,EAAAA,EAAAA,KAACsF,EAAAA,EAAO,CAAApF,SAAA,GAAAM,OAAKa,EAAE,aAAuBnB,UAE/CF,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACL2B,SAAUuB,EACVvD,UAAU,yBACV4B,KAAK,SACLpB,QAAS,kBAjGF,SAAAsC,GACjBnD,GAASgG,EAAAA,EAAAA,IAAgB7C,IAEzBgC,EAAAA,GAAAA,QAAc,GAADvE,OAAIa,EAAE,iBACrB,CA6F2BwE,CAAW9C,EAAI,EAAC7C,UAE/BF,EAAAA,EAAAA,KAAC8F,EAAAA,GAAsB,YAK/B9F,EAAAA,EAAAA,KAACiF,EAAAA,EAAAA,KAAc,CAAChF,UAAU,MAAM8F,SAAU,kBAAMtC,GAAa,EAAM,EAACvD,SAChEsD,GAmEAxD,EAAAA,EAAAA,KAACe,EAAe,CACdC,aAvLW,SAAAgF,GACnBA,EAAMC,iBAENrG,GAASsG,EAAAA,EAAAA,IAAgB,CAAEnD,IAAKA,EAAK5B,YAAaF,KAElD8D,EAAAA,GAAAA,QAAc,GAADvE,OAAIa,EAAE,iBAEnBoC,GAAa,EACf,EAgLUxC,kBAAmBA,EACnBC,aAtMW,SAAA8E,GACnB,IAAAG,EAAwBH,EAAMI,cAAtBtE,EAAIqE,EAAJrE,KAAMC,EAAKoE,EAALpE,MAEd,GACO,gBADCD,EAEJ8B,EAAqB7B,EAM3B,EA4LUZ,YAAaA,EACbC,MA7JI,WACZqC,GAAa,GACbG,EAAqBzC,EACvB,KAmFQI,EAAAA,EAAAA,MAAA8E,EAAAA,SAAA,CAAAnG,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,0BAAyBC,SAAEiB,KAExCI,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,4CAA2CC,SAAA,EACxDqB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,CACGmB,EAAE,WAAW,MAAErB,EAAAA,EAAAA,KAAA,KAAAE,SAAIiE,QAEtB5C,EAAAA,EAAAA,MAAA,OAAArB,SAAA,CACGmB,EAAE,WAAW,MAAEE,EAAAA,EAAAA,MAAA,KAAArB,SAAA,CAAG,IAAEkE,SAEvB7C,EAAAA,EAAAA,MAAA,OAAArB,SAAA,CACGmB,EAAE,gBAAgB,MAAEE,EAAAA,EAAAA,MAAA,KAAArB,SAAA,CAAG,IAAEmE,SAE1BP,IACAvC,EAAAA,EAAAA,MAAA,OAAKtB,UAAW4D,EAAc,eAAiB,GAAG3D,SAAA,CAC/CmB,EAAE,aAAa,KAChBE,EAAAA,EAAAA,MAAA,KAAArB,SAAA,CAAG,IAAE2D,EAAcS,EAAqB,mBAG3CR,IACCvC,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,cAAaC,SAAA,CACzBmB,EAAE,cAAc,MAAErB,EAAAA,EAAAA,KAAA,KAAAE,SAAIqE,OAG1BR,IACCxC,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,eAAcC,SAAA,CAC1BmB,EAAE,cAAc,MAAErB,EAAAA,EAAAA,KAAA,KAAAE,SAAIsE,OAG1BR,IACCzC,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,eAAcC,SAAA,CAC1BmB,EAAE,WAAW,MAAErB,EAAAA,EAAAA,KAAA,KAAAE,SAAIuE,OAIvBX,GACC9D,EAAAA,EAAAA,KAACmF,EAAAA,EAAc,CACbC,UAAU,MACVC,SAASrF,EAAAA,EAAAA,KAACsF,EAAAA,EAAO,CAAApF,SAAA,GAAAM,OAAKa,EAAE,cAAwBnB,UAEhDF,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACLL,UAAU,0BACV4B,KAAK,SACL3B,UAEAF,EAAAA,EAAAA,KAACsG,EAAAA,IAAgB,SAIrBtG,EAAAA,EAAAA,KAACmF,EAAAA,EAAc,CACbC,UAAU,MACVC,SAASrF,EAAAA,EAAAA,KAACsF,EAAAA,EAAO,CAAApF,SAAA,GAAAM,OAAKa,EAAE,WAAqBnB,UAE7CF,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACL2B,SAAU4B,EACV5D,UAAU,0BACV4B,KAAK,SACLpB,QAAS,kBAAMgD,GAAa,EAAK,EAACvD,UAElCF,EAAAA,EAAAA,KAACuG,EAAAA,IAAa,kBAkBlC,ECnJA,EAnHkB,WAChB,IAAAnE,GAAoDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzDoE,EAAkBlE,EAAA,GAAEmE,EAAqBnE,EAAA,GAChDoB,GAA8CrB,EAAAA,EAAAA,WAAS,GAAMsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAAtDrD,EAAesD,EAAA,GAAE+C,EAAkB/C,EAAA,GAEpCgD,GAAarH,EAAAA,EAAAA,IAAYsH,EAAAA,IAEvBvF,GAAMC,EAAAA,EAAAA,MAAND,GAERvB,EAAAA,EAAAA,YACE,SAAAO,IACGA,GAAmBqG,GAAmB,GACvCD,EAAsB,GACxB,GACA,CAACE,IAyCH,OACEpF,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,8BAA6BC,SAAA,CACzCyG,EAAWE,OAAS,IACnB7G,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACLC,QAAQ,kBACRE,QA3CsB,YACvBJ,GAAmBmG,EAAmBK,OAAS,EAClDF,EAAWG,SAAQ,SAAA1G,GAAc,IAAX2C,EAAG3C,EAAH2C,IACpB0D,GAAsB,SAAAM,GACpB,OAAIA,EAAWC,SAASjE,GACfgE,EAED,GAANvG,QAAAyG,EAAAA,EAAAA,GAAWF,GAAU,CAAEhE,GAE3B,GACF,IACU1C,EAOVoG,EAAsB,IANtBE,EAAWG,SAAQ,SAAAI,GAAc,IAAXnE,EAAGmE,EAAHnE,IACpB0D,GAAsB,SAAAM,GACpB,MAAM,GAANvG,QAAAyG,EAAAA,EAAAA,GAAWF,GAAU,CAAEhE,GACzB,GACF,IAKF2D,GAAmB,SAAAS,GAAS,OAAKA,CAAS,GAC5C,EAsBQlH,UAAU,0CAAyCC,SAEnC,GAAAM,OACTa,EADNhB,EACQ,qBACA,yBAIbL,EAAAA,EAAAA,KAACoH,EAAiB,CAAC/G,gBAAiBA,IACb,IAAtBsG,EAAWE,QACV7G,EAAAA,EAAAA,KAACiF,EAAAA,EAAS,CACRoC,OAAK,EACLC,YAAU,EACVC,UAAWf,EACXgB,SAlCsB,SAAAC,GAC5BhB,GAAsB,SAAAM,GACpB,OAAIA,EAAWC,SAASS,GACfV,EAAWW,QAAO,SAAAnC,GAAE,OAAIA,IAAOkC,CAAG,IAElCA,CAEX,IAEId,EAAWE,OAAS,IAAML,EAAmBK,QAC/CH,GAAmB,SAAAS,GAAS,OAAKA,CAAS,GAE9C,EAuBQlH,UAAU,SAAQC,SAEjByG,EAAWgB,KACV,SAAAC,GAUO,IATL7E,EAAG6E,EAAH7E,IACAC,EAAK4E,EAAL5E,MACA7B,EAAWyG,EAAXzG,YACA8B,EAAS2E,EAAT3E,UACAC,EAAS0E,EAAT1E,UACAC,EAAWyE,EAAXzE,YACAC,EAAawE,EAAbxE,cACAC,EAAWuE,EAAXvE,YACAE,EAAWqE,EAAXrE,YAEA,OACEvD,EAAAA,EAAAA,KAAC6H,EAAS,CAER9E,IAAKA,EACLC,MAAOA,EACP7B,YAAaA,EACb8B,UAAWA,EACXC,UAAWA,EACXC,YAAaA,EACbC,cAAeA,EACfC,YAAaA,EACbE,YAAaA,GATRR,EAYX,OAIJ/C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kDAAiDC,UAC9DF,EAAAA,EAAAA,KAAA,KAAAE,SAAImB,EAAE,uBAKhB,C,8CCpGA,IAnBA,WACE,IAAAe,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhD6B,EAAa3B,EAAA,GAAEwF,EAAcxF,EAAA,GAepC,OAbAxC,EAAAA,EAAAA,YAAU,WACR,IAAMiI,EAAe,WACnBD,EAAepH,OAAOsH,YAAc,IACtC,EAKA,OAHAD,IACArH,OAAOuH,iBAAiB,SAAUF,GAE3B,WACLrH,OAAOwH,oBAAoB,SAAUH,EACvC,CACF,GAAG,IAEI9D,CACT,C,uJCnBO,IAAMkE,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,UAAW,EAEhD/I,EAAU,SAAA6I,GAAK,OAAIA,EAAMC,MAAMhJ,IAAK,EAEpCM,EAAgB,SAAAyI,GAAK,OAAIA,EAAMC,MAAM3I,UAAW,EAEhDD,EAAc,SAAA2I,GAAK,OAAIA,EAAMC,MAAME,MAAO,EAE1C3B,EAAgB,SAAAwB,GAC3B,OAAKA,EAAMC,MAAME,OAGFH,EAAMC,MAAMG,MAAMd,QAAO,SAAAtH,GAA6B,IAA1B4C,EAAK5C,EAAL4C,MAAO7B,EAAWf,EAAXe,YAChD,OACE6B,EAAMyF,cAAczB,SAASoB,EAAMC,MAAME,OAAOE,gBAChDtH,EAAYsH,cAAczB,SAASoB,EAAMC,MAAME,OAAOE,cAE1D,IAPSL,EAAMC,MAAMG,KASvB,C","sources":["components/Overdue/Overdue.jsx","helpers/ScrollToTopButton.jsx","components/TodosForm/UpdateTodosForm.jsx","hooks/useLocalDate.js","components/TodosItem/TodosItem.jsx","components/TodosList/TodosList.jsx","hooks/useMobileStyle.js","redux/todos/selectors.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport TodosList from 'components/TodosList/TodosList';\nimport { fetchAllTodos } from 'redux/todos/operations';\nimport {\n  SearchQuery,\n  getPage,\n  getTotalTodos,\n} from '../../redux/todos/selectors';\n\nconst Overdue = () => {\n  const page = useSelector(getPage);\n  const query = useSelector(SearchQuery);\n  const totalTodos = useSelector(getTotalTodos);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllTodos({ page, query }));\n  }, [dispatch, page, query, totalTodos]);\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <TodosList />\n    </div>\n  );\n};\n\nexport default Overdue;\n","import React from 'react';\n\nimport { Button } from 'react-bootstrap';\nimport { FaArrowUp } from 'react-icons/fa';\n\nconst ScrollToTopButton = ({ isAccordionOpen }) => {\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <Button\n      variant=\"outline-primary\"\n      className={`position-absolute bottom-0 end-0 scroll-to-top-button me-3 ${\n        isAccordionOpen ? 'visible' : 'invisible'\n      }`}\n      onClick={scrollToTop}\n    >\n      <FaArrowUp className=\"scroll-to-top-icon\" />\n    </Button>\n  );\n};\n\nexport default ScrollToTopButton;\n","import { Button, Form } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nexport default function UpdateTodosForm({\n  handleSubmit,\n  descriptionUpdate,\n  handleChange,\n  description,\n  reset,\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          type=\"text\"\n          name=\"description\"\n          value={descriptionUpdate}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <Button\n        className=\"me-3\"\n        variant=\"primary\"\n        type=\"submit\"\n        disabled={descriptionUpdate === description}\n      >\n        {t('update_todo')}\n      </Button>\n      <Button variant=\"secondary\" onClick={() => reset()}>\n        {t('cancel')}\n      </Button>\n    </Form>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport moment from 'moment-timezone';\n\nexport default function useLocalDate(date) {\n  const [localDate, setLocalDate] = useState(null);\n\n  useEffect(() => {\n    if (date) {\n      const userTimezone = moment.tz.guess();\n      const local = moment(date).tz(userTimezone).format('DD.MM.YYYY');\n\n      setLocalDate(local);\n    }\n  }, [date]);\n\n  return localDate;\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\nimport {\n  MdOutlineDeleteForever,\n  MdBorderColor,\n  MdOutlineRefresh,\n} from 'react-icons/md';\nimport { BsDatabaseCheck } from 'react-icons/bs';\nimport {\n  Accordion,\n  Button,\n  Form,\n  Tooltip,\n  OverlayTrigger,\n} from 'react-bootstrap';\n\nimport propTypes from 'prop-types';\n\nimport {\n  fetchDeleteTodo,\n  fetchUpdateTodo,\n  fetchCompletedToggle,\n} from '../../redux/todos/operations';\nimport UpdateTodosForm from 'components/TodosForm/UpdateTodosForm';\nimport useMobileStyle from '../../hooks/useMobileStyle';\nimport useLocalDate from '../../hooks/useLocalDate';\n\nconst TodosItem = ({\n  _id,\n  title,\n  description,\n  createdAt,\n  updatedAt,\n  plannedDate,\n  completedDate,\n  overdueDate,\n  refreshDate,\n  archiveDate,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [descriptionUpdate, setDescriptionUpdate] = useState(description);\n\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation();\n\n  const isCompleted = completedDate !== null;\n  const isOverdue = overdueDate !== null;\n  const isRefresh = refreshDate !== null;\n  const isArchive = archiveDate !== null;\n\n  const isMobileStyle = useMobileStyle();\n\n  const localCreatedAt = useLocalDate(createdAt);\n  const localUpdatedAt = useLocalDate(updatedAt);\n  const localPlannedDate = useLocalDate(plannedDate);\n  const localCompletedDate = useLocalDate(completedDate);\n  const localOverdueDate = useLocalDate(overdueDate);\n  const localRefreshDate = useLocalDate(refreshDate);\n  const localArchiveDate = useLocalDate(archiveDate);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'description':\n        setDescriptionUpdate(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(fetchUpdateTodo({ _id: _id, description: descriptionUpdate }));\n\n    toast.success(`${t('todo_update')}`);\n\n    setIsEditing(false);\n  };\n\n  const deleteTodo = _id => {\n    dispatch(fetchDeleteTodo(_id));\n\n    toast.success(`${t('todo_deleted')}`);\n  };\n\n  const completedToggle = _id => {\n    dispatch(fetchCompletedToggle(_id));\n\n    !isCompleted\n      ? toast.success(`${t('todo_completed')}`)\n      : toast.success(`${t('todo_not_completed')}`);\n  };\n\n  const handleToggle = (e, _id) => {\n    e.target.blur();\n\n    completedToggle(_id);\n  };\n\n  const reset = () => {\n    setIsEditing(false);\n    setDescriptionUpdate(description);\n  };\n\n  return (\n    <Accordion.Item eventKey={_id}>\n      <div className=\"d-flex gap-3 align-items-center px-3\">\n        {!isOverdue && (\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={<Tooltip>{t('is_completed')}</Tooltip>}\n          >\n            <Form.Check\n              aria-label=\"option 1\"\n              id={`toggle-check-${_id}`}\n              type=\"checkbox\"\n              variant=\"outline-primary\"\n              checked={isCompleted}\n              disabled={isEditing === true}\n              value=\"1\"\n              onChange={e => handleToggle(e, _id)}\n            />\n          </OverlayTrigger>\n        )}\n        {isOverdue && (\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={<Tooltip>{t('is_overdue')}</Tooltip>}\n          >\n            <Form.Check\n              isInvalid\n              defaultChecked\n              type=\"radio\"\n              id={`toggle-check-${_id}`}\n            />\n          </OverlayTrigger>\n        )}\n        <Accordion.Header className=\"w-100\">\n          {isMobileStyle ? (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip>{title}</Tooltip>}\n            >\n              <h5 className=\"w-100 mb-0 text-truncate custom-accordion-header\">\n                {title}\n              </h5>\n            </OverlayTrigger>\n          ) : (\n            <h5 className=\"w-100 mb-0 text-truncate custom-accordion-header\">\n              {title}\n            </h5>\n          )}\n        </Accordion.Header>\n        {isCompleted || isOverdue ? (\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={<Tooltip>{`${t('add_to_archive')}`}</Tooltip>}\n          >\n            <Button\n              key={`archive-${_id}`}\n              className=\"ms-auto btn btn-success\"\n              type=\"button\"\n              // onClick={() => toArchiveTodo(_id)}\n            >\n              <BsDatabaseCheck />\n            </Button>\n          </OverlayTrigger>\n        ) : (\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={<Tooltip>{`${t('delete')}`}</Tooltip>}\n          >\n            <Button\n              disabled={isEditing}\n              className=\"ms-auto btn btn-danger\"\n              type=\"button\"\n              onClick={() => deleteTodo(_id)}\n            >\n              <MdOutlineDeleteForever />\n            </Button>\n          </OverlayTrigger>\n        )}\n      </div>\n      <Accordion.Body className=\"p-3\" onExited={() => setIsEditing(false)}>\n        {!isEditing ? (\n          <>\n            <p className=\"mb-3 border rounded p-2\">{description}</p>\n\n            <div className=\"d-flex flex-wrap gap-3 align-items-center\">\n              <div>\n                {t('created')}: <b>{localCreatedAt}</b>\n              </div>\n              <div>\n                {t('updated')}: <b> {localUpdatedAt}</b>\n              </div>\n              <div>\n                {t('planned_date')}: <b> {localPlannedDate}</b>\n              </div>\n              {!isOverdue && (\n                <div className={isCompleted ? 'text-success' : ''}>\n                  {t('completed')}:\n                  <b> {isCompleted ? localCompletedDate : '??.??.????'}</b>\n                </div>\n              )}\n              {isOverdue && (\n                <div className=\"text-danger\">\n                  {t('is_overdue')}: <b>{localOverdueDate}</b>\n                </div>\n              )}\n              {isRefresh && (\n                <div className=\"text-primary\">\n                  {t('is_refresh')}: <b>{localRefreshDate}</b>\n                </div>\n              )}\n              {isArchive && (\n                <div className=\"text-warning\">\n                  {t('archive')}: <b>{localArchiveDate}</b>\n                </div>\n              )}\n\n              {isOverdue ? (\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip>{`${t('refresh')}`}</Tooltip>}\n                >\n                  <Button\n                    className=\"ms-auto btn btn-primary\"\n                    type=\"button\"\n                    // onClick={() => toRefreshTodo(_id)}\n                  >\n                    <MdOutlineRefresh />\n                  </Button>\n                </OverlayTrigger>\n              ) : (\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip>{`${t('edit')}`}</Tooltip>}\n                >\n                  <Button\n                    disabled={isCompleted}\n                    className=\"ms-auto btn btn-primary\"\n                    type=\"button\"\n                    onClick={() => setIsEditing(true)}\n                  >\n                    <MdBorderColor />\n                  </Button>\n                </OverlayTrigger>\n              )}\n            </div>\n          </>\n        ) : (\n          <UpdateTodosForm\n            handleSubmit={handleSubmit}\n            descriptionUpdate={descriptionUpdate}\n            handleChange={handleChange}\n            description={description}\n            reset={reset}\n          />\n        )}\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n};\n\nTodosItem.propTypes = {\n  _id: propTypes.string.isRequired,\n  title: propTypes.string.isRequired,\n  description: propTypes.string.isRequired,\n  createdAt: propTypes.string.isRequired,\n  updatedAt: propTypes.string.isRequired,\n  completedDate: propTypes.string,\n  overdueDate: propTypes.string,\n  archiveDate: propTypes.string,\n};\nexport default TodosItem;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Accordion, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport ScrollToTopButton from '../../helpers/ScrollToTopButton';\nimport { getFoundTodos } from '../../redux/todos/selectors';\nimport TodosItem from '../TodosItem/TodosItem';\n\nconst TodosList = () => {\n  const [activeAccordionKey, setActiveAccordionKey] = useState([]);\n  const [isAccordionOpen, setIsAccordionOpen] = useState(false);\n\n  const foundTodos = useSelector(getFoundTodos);\n\n  const { t } = useTranslation();\n\n  useEffect(\n    isAccordionOpen => {\n      !isAccordionOpen && setIsAccordionOpen(false);\n      setActiveAccordionKey([]);\n    },\n    [foundTodos]\n  );\n\n  const handleToggleAccordion = () => {\n    if (!isAccordionOpen && activeAccordionKey.length > 0) {\n      foundTodos.forEach(({ _id }) => {\n        setActiveAccordionKey(prevStates => {\n          if (prevStates.includes(_id)) {\n            return prevStates;\n          } else {\n            return [...prevStates, _id];\n          }\n        });\n      });\n    } else if (!isAccordionOpen) {\n      foundTodos.forEach(({ _id }) => {\n        setActiveAccordionKey(prevStates => {\n          return [...prevStates, _id];\n        });\n      });\n    } else {\n      setActiveAccordionKey([]);\n    }\n\n    setIsAccordionOpen(prevState => !prevState);\n  };\n\n  const handleAccordionSelect = key => {\n    setActiveAccordionKey(prevStates => {\n      if (prevStates.includes(key)) {\n        return prevStates.filter(id => id !== key);\n      } else {\n        return key;\n      }\n    });\n\n    if (foundTodos.length - 1 === activeAccordionKey.length) {\n      setIsAccordionOpen(prevState => !prevState);\n    }\n  };\n\n  return (\n    <div className=\"mb-3 pb-5 position-relative\">\n      {foundTodos.length > 0 && (\n        <Button\n          variant=\"outline-primary\"\n          onClick={handleToggleAccordion}\n          className=\"position-absolute bottom-0 start-0 ms-3\"\n        >\n          {isAccordionOpen\n            ? `${t('is_accordion_close')}`\n            : `${t('is_accordion_open')}`}\n        </Button>\n      )}\n\n      <ScrollToTopButton isAccordionOpen={isAccordionOpen} />\n      {foundTodos.length !== 0 ? (\n        <Accordion\n          flush\n          alwaysOpen\n          activeKey={activeAccordionKey}\n          onSelect={handleAccordionSelect}\n          className=\"border\"\n        >\n          {foundTodos.map(\n            ({\n              _id,\n              title,\n              description,\n              createdAt,\n              updatedAt,\n              plannedDate,\n              completedDate,\n              overdueDate,\n              archiveDate,\n            }) => {\n              return (\n                <TodosItem\n                  key={_id}\n                  _id={_id}\n                  title={title}\n                  description={description}\n                  createdAt={createdAt}\n                  updatedAt={updatedAt}\n                  plannedDate={plannedDate}\n                  completedDate={completedDate}\n                  overdueDate={overdueDate}\n                  archiveDate={archiveDate}\n                />\n              );\n            }\n          )}\n        </Accordion>\n      ) : (\n        <div className=\"text-center py-5 border rounded bs-accordion-bg\">\n          <p>{t('no_todos_text')}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TodosList;\n","import { useState, useEffect } from 'react';\n\nfunction useMobileStyle() {\n  const [isMobileStyle, setMobileStyle] = useState(false);\n\n  useEffect(() => {\n    const resizeScreen = () => {\n      setMobileStyle(window.innerWidth <= 576);\n    };\n\n    resizeScreen();\n    window.addEventListener('resize', resizeScreen);\n\n    return () => {\n      window.removeEventListener('resize', resizeScreen);\n    };\n  }, []);\n\n  return isMobileStyle;\n}\n\nexport default useMobileStyle;\n","export const getTotalPages = state => state.todos.totalPages;\n\nexport const getPage = state => state.todos.page;\n\nexport const getTotalTodos = state => state.todos.totalTodos;\n\nexport const SearchQuery = state => state.todos.search;\n\nexport const getFoundTodos = state => {\n  if (!state.todos.search) {\n    return state.todos.items;\n  }\n  const result = state.todos.items.filter(({ title, description }) => {\n    return (\n      title.toLowerCase().includes(state.todos.search.toLowerCase()) ||\n      description.toLowerCase().includes(state.todos.search.toLowerCase())\n    );\n  });\n  return result;\n};\n\nexport const selectLoading = state => state.todos.loading;\n"],"names":["page","useSelector","getPage","query","SearchQuery","totalTodos","getTotalTodos","dispatch","useDispatch","useEffect","fetchAllTodos","_jsx","className","children","TodosList","_ref","isAccordionOpen","Button","variant","concat","onClick","window","scrollTo","top","behavior","FaArrowUp","UpdateTodosForm","handleSubmit","descriptionUpdate","handleChange","description","reset","t","useTranslation","_jsxs","Form","onSubmit","controlId","as","rows","type","name","value","onChange","disabled","useLocalDate","date","_useState","useState","_useState2","_slicedToArray","localDate","setLocalDate","userTimezone","moment","local","tz","format","_id","title","createdAt","updatedAt","plannedDate","completedDate","overdueDate","refreshDate","archiveDate","isEditing","setIsEditing","_useState3","_useState4","setDescriptionUpdate","isCompleted","isOverdue","isRefresh","isArchive","isMobileStyle","useMobileStyle","localCreatedAt","localUpdatedAt","localPlannedDate","localCompletedDate","localOverdueDate","localRefreshDate","localArchiveDate","handleToggle","e","target","blur","fetchCompletedToggle","toast","completedToggle","Accordion","eventKey","OverlayTrigger","placement","overlay","Tooltip","id","checked","isInvalid","defaultChecked","BsDatabaseCheck","fetchDeleteTodo","deleteTodo","MdOutlineDeleteForever","onExited","event","preventDefault","fetchUpdateTodo","_event$currentTarget","currentTarget","_Fragment","MdOutlineRefresh","MdBorderColor","activeAccordionKey","setActiveAccordionKey","setIsAccordionOpen","foundTodos","getFoundTodos","length","forEach","prevStates","includes","_toConsumableArray","_ref2","prevState","ScrollToTopButton","flush","alwaysOpen","activeKey","onSelect","key","filter","map","_ref3","TodosItem","setMobileStyle","resizeScreen","innerWidth","addEventListener","removeEventListener","getTotalPages","state","todos","totalPages","search","items","toLowerCase"],"sourceRoot":""}