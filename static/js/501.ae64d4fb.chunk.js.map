{"version":3,"file":"static/js/501.ae64d4fb.chunk.js","mappings":"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","sources":["hooks/useMobileStyle.js","utils/MyDatePicker.js","helpers/getPlannedDate.js","components/PeriodsDate/PeriodsDate.jsx","components/TodosForm/AddTodosForm.jsx","components/TodosSearch/TodosSearch.jsx","components/TodosStatistics/TodosStatistics.jsx","components/GetPagination/GetPagination.jsx","pages/Todos/Todos.js","redux/todos/selectors.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useMobileStyle() {\n  const [isMobileStyle, setMobileStyle] = useState(false);\n\n  useEffect(() => {\n    const resizeScreen = () => {\n      setMobileStyle(window.innerWidth <= 576);\n    };\n\n    resizeScreen();\n    window.addEventListener('resize', resizeScreen);\n\n    return () => {\n      window.removeEventListener('resize', resizeScreen);\n    };\n  }, []);\n\n  return isMobileStyle;\n}\n\nexport default useMobileStyle;\n","import React, { useState, useEffect, useContext } from 'react';\n\nimport { LanguageContext } from 'utils/LanguageContext';\nimport useMobileStyle from '../hooks/useMobileStyle';\n\nimport { MdCalendarMonth } from 'react-icons/md';\nimport DatePicker from 'react-datepicker';\nimport { registerLocale, setDefaultLocale } from 'react-datepicker';\nimport { uk, enUS } from 'date-fns/locale';\nimport { useTranslation } from 'react-i18next';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nfunction MyDatePicker({ selectedPeriod, setPlannedDate }) {\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  const isMobileStyle = useMobileStyle();\n  const { currentLanguage } = useContext(LanguageContext);\n\n  const { t } = useTranslation();\n\n  registerLocale('ua', uk);\n  registerLocale('en', enUS);\n\n  setDefaultLocale(currentLanguage);\n\n  useEffect(() => {\n    selectedPeriod !== 'date' && setSelectedDate(null);\n  }, [selectedPeriod]);\n\n  const dayClassName = date => {\n    const today = new Date();\n\n    if (date.toDateString() === today.toDateString()) {\n      return 'bg-primary text-white rounded'; // Стилі для поточної дати\n    }\n\n    if (selectedDate && selectedDate.toDateString() === date.toDateString()) {\n      return 'text-white'; // Стилі для обраної дати\n    }\n\n    if (date < today) {\n      return 'text-body-tertiary'; // Стилі для дат до поточної дати\n    }\n\n    if (date.getMonth() === today.getMonth()) {\n      return 'text-primary rounded'; // Стилі для поточного місяця\n    }\n\n    if (date > today) {\n      return 'text-secondary'; // Стилі для наступних місяців\n    }\n\n    return 'text-body-secondary'; // Стилі за замовчуванням\n  };\n\n  return (\n    <div\n      className={`d-flex gap-1 align-items-center ${\n        selectedPeriod === 'date' && 'text-primary'\n      }`}\n    >\n      <MdCalendarMonth />\n      <DatePicker\n        selected={selectedDate}\n        onChange={date => {\n          setSelectedDate(date);\n          setPlannedDate(date);\n        }}\n        className=\"w-100 text-center\"\n        dateFormat=\"dd.MM.yyyy\"\n        calendarClassName=\"bg-body-tertiary\"\n        dayClassName={dayClassName}\n        popperPlacement=\"top-end\"\n        popperModifiers={[\n          {\n            name: 'offset',\n            options: {\n              offset: [5, 10],\n            },\n          },\n          {\n            name: 'preventOverflow',\n            options: {\n              rootBoundary: 'viewport',\n              tether: false,\n              altAxis: true,\n            },\n          },\n        ]}\n        locale={currentLanguage}\n        peekNextMonth\n        showMonthDropdown\n        showYearDropdown\n        dropdownMode=\"select\"\n        closeOnScroll={true}\n        placeholderText={t('select_date')}\n        minDate={new Date()}\n        withPortal={isMobileStyle}\n        fixedHeight\n      />\n    </div>\n  );\n}\n\nexport default MyDatePicker;\n","export const getPlannedDate = ({ text, plannedDate }) => {\n  const currentDate = new Date();\n  let date;\n\n  switch (text) {\n    case 'week':\n      date = new Date(currentDate.getTime() + 7 * 24 * 60 * 60 * 1000);\n      break;\n\n    case 'month':\n      date = new Date(\n        currentDate.getFullYear(),\n        currentDate.getMonth() + 1,\n        currentDate.getDate()\n      );\n      break;\n\n    case '3_months':\n      date = new Date(\n        currentDate.getFullYear(),\n        currentDate.getMonth() + 3,\n        currentDate.getDate()\n      );\n      break;\n\n    case 'half_year':\n      date = new Date(\n        currentDate.getFullYear(),\n        currentDate.getMonth() + 6,\n        currentDate.getDate()\n      );\n      break;\n\n    case 'year':\n      date = new Date(\n        currentDate.getFullYear() + 1,\n        currentDate.getMonth(),\n        currentDate.getDate()\n      );\n      break;\n\n    case '3_years':\n      date = new Date(\n        currentDate.getFullYear() + 3,\n        currentDate.getMonth(),\n        currentDate.getDate()\n      );\n      break;\n\n    case '5_years':\n      date = new Date(\n        currentDate.getFullYear() + 5,\n        currentDate.getMonth(),\n        currentDate.getDate()\n      );\n      break;\n\n    case 'date':\n      date = plannedDate;\n      break;\n\n    default:\n      break;\n  }\n\n  return date;\n};\n","import { Form } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport MyDatePicker from '../../utils/MyDatePicker';\nimport { Periods } from '../../constants/constants';\nimport { getPlannedDate } from '../../helpers/getPlannedDate';\n\nexport default function PeriodsDate({\n  plannedDate,\n  setPlannedDate,\n  selectedPeriod,\n  setSelectedPeriod,\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"d-flex flex-wrap gap-3 align-items-center\">\n      {Periods.map(text => (\n        <Form.Check\n          style={{ width: '122px' }}\n          key={`${t(text)}`}\n          checked={selectedPeriod === text}\n          label={`${t(text)}`}\n          name=\"plannedDate\"\n          type=\"radio\"\n          id={`inline-radio-${text}`}\n          onChange={() => {\n            setSelectedPeriod(text);\n            setPlannedDate(getPlannedDate({ text, plannedDate }));\n          }}\n        />\n      ))}\n      <Form.Label>\n        <Form.Check\n          key=\"date\"\n          checked={selectedPeriod === 'date'}\n          inline\n          name=\"plannedDate\"\n          type=\"radio\"\n          className=\"btn-check\"\n          id=\"inline-radio-date\"\n          onChange={() => {\n            const text = 'date';\n            setSelectedPeriod(text);\n            setPlannedDate(getPlannedDate({ text, plannedDate }));\n          }}\n        />\n        <MyDatePicker\n          selectedPeriod={selectedPeriod}\n          setPlannedDate={setPlannedDate}\n        />\n      </Form.Label>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Accordion, Button, Form } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport toast from 'react-hot-toast';\n\nimport { fetchAddTodo } from '../../redux/todos/operations';\nimport PeriodsDate from '../PeriodsDate/PeriodsDate';\n\nexport default function AddTodosForm() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [plannedDate, setPlannedDate] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState('');\n  const [activeAccordionKey, setActiveAccordionKey] = useState(null);\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        break;\n\n      case 'description':\n        setDescription(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(fetchAddTodo({ title, description, plannedDate }));\n    toast.success(`${t('todo_added')}`);\n    reset();\n  };\n\n  const reset = () => {\n    setTitle('');\n    setDescription('');\n    setPlannedDate('');\n    setSelectedPeriod('');\n  };\n\n  const handleCancelClick = () => {\n    reset();\n    if (activeAccordionKey === '0') {\n      setActiveAccordionKey(null);\n    }\n  };\n\n  const handleAccordionSelect = key => {\n    setActiveAccordionKey(key);\n  };\n\n  return (\n    <Accordion\n      activeKey={activeAccordionKey}\n      onSelect={handleAccordionSelect}\n      className=\"mb-5\"\n    >\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header>\n          <h3 className=\"mb-0 ms-auto \">{t('form_add_todo_title')}</h3>\n        </Accordion.Header>\n        <Accordion.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label visuallyHidden>{t('title_todo')}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"title\"\n                required\n                value={title}\n                onChange={handleChange}\n                placeholder={t('placeholder_title')}\n              />\n            </Form.Group>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label visuallyHidden>{t('description')}</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={6}\n                type=\"text\"\n                name=\"description\"\n                value={description}\n                onChange={handleChange}\n                placeholder={t('placeholder_description')}\n              />\n            </Form.Group>\n            <div key=\"inline-radio\" className=\"d-flex flex-wrap mb-3\">\n              <h5 className=\"d-inline-block me-3 mb-3\">\n                {`${t('planned_date')}`}:\n              </h5>\n              <PeriodsDate\n                plannedDate={plannedDate}\n                setPlannedDate={setPlannedDate}\n                selectedPeriod={selectedPeriod}\n                setSelectedPeriod={setSelectedPeriod}\n              />\n            </div>\n            <Button\n              className=\"me-3\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={!title || !description || !selectedPeriod}\n            >\n              {t('add_todo')}\n            </Button>\n            <Button variant=\"secondary\" onClick={handleCancelClick}>\n              {t('cancel')}\n            </Button>\n          </Form>\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Form, CloseButton, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { MdSearch } from 'react-icons/md';\nimport { getSearch, clearSearch } from '../../redux/todos/todosSlice';\n\nconst TodosSearch = () => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const handleSearch = () => {\n    dispatch(getSearch(searchValue));\n  };\n\n  const handleClearSearch = event => {\n    event.target.blur();\n    dispatch(clearSearch());\n    setSearchValue('');\n  };\n\n  return (\n    <Form className=\"d-flex mb-3\">\n      <Form.Label className=\"mb-0 d-flex align-items-center\">\n        <Form.Control\n          type=\"text\"\n          name={searchValue}\n          value={searchValue}\n          onChange={event => setSearchValue(event.target.value)}\n          placeholder={t('placeholder_search')}\n          className=\"me-2\"\n          aria-label=\"Search\"\n        />\n        <Button onClick={handleSearch} variant=\"link  me-2 p-0\">\n          <MdSearch style={{ width: '32px', height: '32px' }} />\n        </Button>\n        <CloseButton onClick={handleClearSearch} />\n      </Form.Label>\n    </Form>\n  );\n};\n\nexport default TodosSearch;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink, Link, useLocation } from 'react-router-dom';\n\nimport { Nav, Tooltip, OverlayTrigger } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { getTotalTodos } from '../../redux/todos/selectors';\nimport useMobileStyle from '../../hooks/useMobileStyle';\n\nconst TodosStatistics = () => {\n  const totalTodos = useSelector(getTotalTodos);\n\n  const location = useLocation();\n\n  const { t } = useTranslation();\n\n  const handleClick = event => {\n    event.target.blur();\n  };\n\n  const isMobileStyle = useMobileStyle();\n\n  return (\n    <Nav\n      variant=\"tabs\"\n      defaultActiveKey=\"/todos\"\n      className=\"d-flex flex-nowrap gap-3 ms-auto nav-todos\"\n    >\n      <Link\n        className={`flex-shrink-1 nav-link position-relative ${\n          location.pathname === '/todos' ? 'active' : ''\n        }`}\n        to=\"/todos\"\n        onClick={handleClick}\n      >\n        {isMobileStyle ? (\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={<Tooltip>{`${t('all_todos')}`}</Tooltip>}\n          >\n            <p className=\"w-100 col-2 text-truncate\">{t('all_todos')}</p>\n          </OverlayTrigger>\n        ) : (\n          <p className=\"w-100 col-2 text-truncate\">{t('all_todos')}</p>\n        )}\n        <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\n          {totalTodos}\n          <span className=\"visually-hidden\">{t('all_todos')}</span>\n        </span>\n      </Link>\n      <NavLink\n        className=\"flex-shrink-1 nav-link position-relative\"\n        to=\"completed\"\n        onClick={handleClick}\n      >\n        {isMobileStyle ? (\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={<Tooltip>{`${t('completed')}`}</Tooltip>}\n          >\n            <p className=\"w-100 col-2 text-truncate\">{t('completed')}</p>\n          </OverlayTrigger>\n        ) : (\n          <p className=\"w-100 col-2 text-truncate\">{t('completed')}</p>\n        )}\n        <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\n          0<span className=\"visually-hidden\">{t('completed')}</span>\n        </span>\n      </NavLink>\n      <NavLink\n        className=\"flex-shrink-1 nav-link position-relative\"\n        to=\"overdue\"\n        onClick={handleClick}\n      >\n        {isMobileStyle ? (\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={<Tooltip>{`${t('is_overdue')}`}</Tooltip>}\n          >\n            <p className=\"w-100 col-2 text-truncate\">{t('is_overdue')}</p>\n          </OverlayTrigger>\n        ) : (\n          <p className=\"w-100 col-2 text-truncate\">{t('is_overdue')}</p>\n        )}\n        <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\n          0<span className=\"visually-hidden\">{t('is_overdue')}</span>\n        </span>\n      </NavLink>\n      <NavLink\n        className=\"flex-shrink-1 nav-link position-relative\"\n        to=\"archive\"\n        onClick={handleClick}\n      >\n        {isMobileStyle ? (\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={<Tooltip>{`${t('archive')}`}</Tooltip>}\n          >\n            <p className=\"w-100 col-2 text-truncate\">{t('archive')}</p>\n          </OverlayTrigger>\n        ) : (\n          <p className=\"w-100 col-2 text-truncate\">{t('archive')}</p>\n        )}\n        <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\n          0<span className=\"visually-hidden\">{t('archive')}</span>\n        </span>\n      </NavLink>\n    </Nav>\n  );\n};\n\nexport default TodosStatistics;\n","import React, { useState, useEffect } from 'react';\n\nimport Pagination from 'react-bootstrap/Pagination';\n\nexport default function GetPagination({ page, totalPages, handlePageChange }) {\n  const [maxVisiblePages, setMaxVisiblePages] = useState(5);\n\n  const handleWindowSizeChange = () => {\n    if (window.innerWidth < 425) {\n      setMaxVisiblePages(1);\n    } else if (window.innerWidth < 576) {\n      setMaxVisiblePages(3);\n    } else if (window.innerWidth < 992) {\n      setMaxVisiblePages(5);\n    } else {\n      setMaxVisiblePages(7);\n    }\n  };\n\n  useEffect(() => {\n    handleWindowSizeChange();\n    window.addEventListener('resize', handleWindowSizeChange);\n    return () => {\n      window.removeEventListener('resize', handleWindowSizeChange);\n    };\n  }, []);\n\n  const isFirstPage = page === 1;\n  const isLastPage = page === totalPages;\n\n  const getPageRange = () => {\n    if (totalPages <= maxVisiblePages) {\n      return [...Array(totalPages)].map((_, index) => index + 1);\n    }\n\n    const middlePage = Math.floor(maxVisiblePages / 2);\n    let lowerBound = Math.max(page - middlePage, 1);\n    let upperBound = Math.min(page + middlePage, totalPages);\n\n    if (page <= middlePage) {\n      upperBound = maxVisiblePages;\n    } else if (page > totalPages - middlePage) {\n      lowerBound = totalPages - maxVisiblePages + 1;\n    }\n\n    const pageRange = [];\n    if (lowerBound !== 1) {\n      pageRange.push(1);\n      if (lowerBound !== 2) {\n        pageRange.push('...');\n      }\n    }\n\n    for (let i = lowerBound; i <= upperBound; i++) {\n      pageRange.push(i);\n    }\n\n    if (upperBound !== totalPages) {\n      if (upperBound !== totalPages - 1) {\n        pageRange.push('...');\n      }\n      pageRange.push(totalPages);\n    }\n\n    return pageRange;\n  };\n\n  const pageRange = getPageRange();\n\n  return (\n    <>\n      {totalPages > 1 && (\n        <Pagination className=\"mx-auto mb-5\">\n          <Pagination.First\n            onClick={() => handlePageChange(1)}\n            disabled={isFirstPage}\n          />\n          <Pagination.Prev\n            onClick={() => handlePageChange(Math.max(page - 1, 1))}\n            disabled={isFirstPage}\n          />\n          {pageRange.map((pageNumber, index) => {\n            if (pageNumber === '...') {\n              return <Pagination.Ellipsis key={index} />;\n            }\n            return (\n              <Pagination.Item\n                key={index}\n                active={pageNumber === page}\n                onClick={() => handlePageChange(pageNumber)}\n              >\n                {pageNumber}\n              </Pagination.Item>\n            );\n          })}\n          <Pagination.Next\n            onClick={() => handlePageChange(Math.min(page + 1, totalPages))}\n            disabled={isLastPage}\n          />\n          <Pagination.Last\n            onClick={() => handlePageChange(totalPages)}\n            disabled={isLastPage}\n          />\n        </Pagination>\n      )}\n    </>\n  );\n}\n","import React, { useEffect, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Outlet } from 'react-router-dom';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useTranslation } from 'react-i18next';\n\nimport AddTodosForm from 'components/TodosForm/AddTodosForm';\nimport TodosFilter from '../../components/TodosSearch/TodosSearch';\nimport TodosStatistics from '../../components/TodosStatistics/TodosStatistics';\nimport GetPagination from '../../components/GetPagination/GetPagination';\nimport { fetchAllTodos } from 'redux/todos/operations';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  SearchQuery,\n  getPage,\n  getTotalPages,\n  getTotalTodos,\n} from '../../redux/todos/selectors';\nimport { setPage } from '../../redux/todos/todosSlice';\n\nexport default function Todos() {\n  const page = useSelector(getPage);\n  const totalPages = useSelector(getTotalPages);\n  const query = useSelector(SearchQuery);\n  const totalTodos = useSelector(getTotalTodos);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllTodos({ page, query }));\n  }, [dispatch, page, query, totalTodos]);\n\n  const handlePageChange = newPage => {\n    dispatch(setPage(newPage));\n    dispatch(fetchAllTodos({ page: newPage, query }));\n  };\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>{t('helmet_title_todos_page')}</title>\n      </Helmet>\n      <div className=\"d-flex flex-column mt-5 pt-5\">\n        <AddTodosForm />\n        <div className=\"d-flex flex-wrap gap-3 align-items-end\">\n          <TodosFilter filter={query} page={page} />\n          <TodosStatistics />\n        </div>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n        <GetPagination\n          page={page}\n          totalPages={totalPages}\n          handlePageChange={handlePageChange}\n        />\n      </div>\n    </HelmetProvider>\n  );\n}\n","export const getTotalPages = state => state.todos.totalPages;\n\nexport const getPage = state => state.todos.page;\n\nexport const getTotalTodos = state => state.todos.totalTodos;\n\nexport const SearchQuery = state => state.todos.search;\n\nexport const getFoundTodos = state => {\n  if (!state.todos.search) {\n    return state.todos.items;\n  }\n  const result = state.todos.items.filter(({ title, description }) => {\n    return (\n      title.toLowerCase().includes(state.todos.search.toLowerCase()) ||\n      description.toLowerCase().includes(state.todos.search.toLowerCase())\n    );\n  });\n  return result;\n};\n\nexport const selectLoading = state => state.todos.loading;\n"],"names":["_useState","useState","_useState2","_slicedToArray","isMobileStyle","setMobileStyle","useEffect","resizeScreen","window","innerWidth","addEventListener","removeEventListener","_ref","selectedPeriod","setPlannedDate","selectedDate","setSelectedDate","useMobileStyle","currentLanguage","useContext","LanguageContext","t","useTranslation","registerLocale","uk","enUS","setDefaultLocale","_jsxs","className","concat","children","_jsx","MdCalendarMonth","DatePicker","selected","onChange","date","dateFormat","calendarClassName","dayClassName","today","Date","toDateString","getMonth","popperPlacement","popperModifiers","name","options","offset","rootBoundary","tether","altAxis","locale","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","closeOnScroll","placeholderText","minDate","withPortal","fixedHeight","getPlannedDate","text","plannedDate","currentDate","getTime","getFullYear","getDate","PeriodsDate","setSelectedPeriod","Periods","Form","style","width","checked","label","type","id","inline","MyDatePicker","AddTodosForm","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","activeAccordionKey","setActiveAccordionKey","dispatch","useDispatch","handleChange","event","_event$currentTarget","currentTarget","value","reset","Accordion","activeKey","onSelect","key","eventKey","onSubmit","preventDefault","fetchAddTodo","toast","controlId","visuallyHidden","required","placeholder","as","rows","Button","variant","disabled","onClick","searchValue","setSearchValue","target","getSearch","MdSearch","height","CloseButton","blur","clearSearch","totalTodos","useSelector","getTotalTodos","location","useLocation","handleClick","Nav","defaultActiveKey","Link","pathname","to","OverlayTrigger","placement","overlay","Tooltip","NavLink","GetPagination","page","totalPages","handlePageChange","maxVisiblePages","setMaxVisiblePages","handleWindowSizeChange","isFirstPage","isLastPage","pageRange","_toConsumableArray","Array","map","_","index","middlePage","Math","floor","lowerBound","max","upperBound","min","push","i","getPageRange","_Fragment","Pagination","pageNumber","active","Todos","getPage","getTotalPages","query","SearchQuery","fetchAllTodos","HelmetProvider","Helmet","TodosFilter","filter","TodosStatistics","Suspense","fallback","Loader","Outlet","newPage","setPage","state","todos","search","getFoundTodos","items","toLowerCase","includes"],"sourceRoot":""}